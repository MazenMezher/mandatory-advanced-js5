{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Motar\\\\Desktop\\\\mandatory-advanced-js5\\\\src\\\\Components\\\\LogIn.js\";\nimport React, { Component } from 'react';\nimport { Dropbox } from \"dropbox\";\n\nclass LogIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.LogIn = () => {\n      let CLIENT_ID = 't99ul8j5gzu9ufc';\n      let dbx = new Dropbox({\n        clientId: CLIENT_ID\n      });\n      let LocalHost = 'http://localhost:3000/auth';\n      let authUrl = dbx.getAuthenticationUrl(LocalHost);\n      console.log(authUrl);\n      this.setState({\n        LoginDropBox: authUrl\n      });\n    };\n\n    this.state = {\n      LoginDropBox: '',\n      accessToken: false,\n      myToken: null,\n      tokenAvailable: false\n    };\n  }\n\n  componentDidMount() {\n    // get the token from localStorage\n    let token = localStorage.getItem('token');\n    console.log(token);\n\n    if (token) {\n      this.setState({\n        myToken: token,\n        tokenAvailable: true\n      });\n      console.log('Token is available');\n    } else {\n      this.setState({\n        myToken: null\n      });\n      console.log('Token is unavailable');\n    }\n  }\n\n  render() {\n    const {\n      LoginDropBox\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: this.LogIn,\n      href: LoginDropBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Logga in\"));\n  }\n\n}\n\nexport default LogIn;","map":{"version":3,"sources":["C:/Users/Motar/Desktop/mandatory-advanced-js5/src/Components/LogIn.js"],"names":["React","Component","Dropbox","LogIn","constructor","props","CLIENT_ID","dbx","clientId","LocalHost","authUrl","getAuthenticationUrl","console","log","setState","LoginDropBox","state","accessToken","myToken","tokenAvailable","componentDidMount","token","localStorage","getItem","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,SAAxB;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA2BnBF,KA3BmB,GA2BX,MAAM;AACV,UAAIG,SAAS,GAAG,iBAAhB;AAEA,UAAIC,GAAG,GAAG,IAAIL,OAAJ,CAAY;AAAEM,QAAAA,QAAQ,EAAEF;AAAZ,OAAZ,CAAV;AACA,UAAIG,SAAS,GAAG,4BAAhB;AACA,UAAIC,OAAO,GAAGH,GAAG,CAACI,oBAAJ,CAAyBF,SAAzB,CAAd;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAEA,WAAKI,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEL;AAAhB,OAAd;AACH,KArCkB;;AAGf,SAAKM,KAAL,GAAa;AACTD,MAAAA,YAAY,EAAE,EADL;AAETE,MAAAA,WAAW,EAAE,KAFJ;AAITC,MAAAA,OAAO,EAAE,IAJA;AAKTC,MAAAA,cAAc,EAAE;AALP,KAAb;AAOH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACA,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;;AAEA,QAAIA,KAAJ,EAAW;AACP,WAAKP,QAAL,CAAc;AAAEI,QAAAA,OAAO,EAAEG,KAAX;AAAkBF,QAAAA,cAAc,EAAE;AAAlC,OAAd;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,KAHD,MAIK;AACD,WAAKC,QAAL,CAAc;AAAEI,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;AACJ;;AAcDW,EAAAA,MAAM,GAAG;AACL,UAAM;AAAET,MAAAA;AAAF,QAAkB,KAAKC,KAA7B;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,OAAO,EAAE,KAAKb,KAAjB;AAAwB,MAAA,IAAI,EAAEY,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ;AAKH;;AAhDyB;;AAmD9B,eAAeZ,KAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Dropbox } from \"dropbox\";\r\n\r\nclass LogIn extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            LoginDropBox: '',\r\n            accessToken: false,\r\n\r\n            myToken: null,\r\n            tokenAvailable: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // get the token from localStorage\r\n        let token = localStorage.getItem('token');\r\n        console.log(token);\r\n\r\n        if (token) {\r\n            this.setState({ myToken: token, tokenAvailable: true });\r\n            console.log('Token is available');\r\n        }\r\n        else {\r\n            this.setState({ myToken: null });\r\n            console.log('Token is unavailable');\r\n        }\r\n    }\r\n\r\n    LogIn = () => {\r\n        let CLIENT_ID = 't99ul8j5gzu9ufc';\r\n\r\n        let dbx = new Dropbox({ clientId: CLIENT_ID });\r\n        let LocalHost = 'http://localhost:3000/auth';\r\n        let authUrl = dbx.getAuthenticationUrl(LocalHost);\r\n\r\n        console.log(authUrl);\r\n\r\n        this.setState({ LoginDropBox: authUrl});\r\n    }\r\n\r\n    render() {\r\n        const { LoginDropBox} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <a onClick={this.LogIn} href={LoginDropBox}>Logga in</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LogIn\r\n"]},"metadata":{},"sourceType":"module"}