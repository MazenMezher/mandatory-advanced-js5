{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Motar\\\\Desktop\\\\mandatory-advanced-js5\\\\src\\\\Components\\\\Main.js\";\nimport React, { Component } from 'react';\nimport { Dropbox } from \"dropbox\";\nimport { Link } from 'react-router-dom';\nimport LogOut from './LogOut';\nimport DropdownOptions from './DropdownOptions';\nimport CreateFolder from './CreateFolder';\nimport '../Css/icons.css';\nimport '../Css/mainFiles.css';\nimport '../Css/nav.css';\nimport '../Css/UlItems.css';\nimport folderImg from '../Img/folder-img.png';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.search_FOLDERS_FILES = e => {\n      /*this.setState({ \r\n        filterFolders: e.target.value, \r\n        filterFiles: e.target.value \r\n      });*/\n      this.dbx.filesSearch({\n        path: '',\n        query: e.target.value\n      }).then(res => {\n        let entries = res.matches.map(x => x.metadata);\n        console.log('HEJ2', entries);\n        this.setState({\n          folders: entries\n        });\n        entries = entries.filter(x => x[\".tag\"] === \"file\").map(x => ({\n          path: x.path_display\n        }));\n        return this.dbx.filesGetThumbnailBatch({\n          entries: entries\n        });\n      }).then(res => {\n        this.setState({\n          files: res.entries\n        });\n      });\n    };\n\n    this.downloadFile = file => {\n      this.dbx.filesGetThumbnail({\n        \"path\": file\n      }).then(res => {\n        console.log('HEJ 3', res);\n        let objURL = window.URL.createObjectURL(res.fileBlob);\n        this.setState({\n          URL: objURL\n        });\n      });\n    };\n\n    this.state = {\n      folders: [],\n      show: false,\n      files: [],\n      URL: null,\n      filterFolders: '',\n      filterFiles: '',\n      showCreateFolder: false\n    };\n    this.inputRef = React.createRef();\n  } // delets files and closes delete window\n  // onDelete = (path_delete) =>{\n  //   const{folders} = this.state\n  //   this.dbx.filesDelete({path: path_delete})\n  //   .then(response =>{\n  //     let newFolder = folders.filter( folder => folder.name !== response.name)\n  //     this.setState({folders: newFolder})\n  //   })\n  // }\n  // //Create Folder\n  // createFolder = (name) =>{\n  //   this.dbx.filesCreateFolderV2({path: `/${name}`, autorename:true })\n  //   .then(response =>{\n  //     let folder = {}\n  //     folder[\".tag\"] = \"folder\"\n  //     let newFolder = {...folder,...response.metadata}\n  //     let allFolders = [...this.state.folders, newFolder]\n  //     this.setState({folders: allFolders})\n  //   }).catch(response=>{\n  //     console.log(response)\n  //   })\n  // }\n  // //shows the window when click on create folder\n  // onShowCreateFolder= () =>{\n  //   this.setState({showCreateFolder: true})\n  // }\n  // //closes the window when click on create folder\n  // onCloseCreateFolder = () =>{\n  //   this.setState({showCreateFolder: false})\n  // }\n  // onUpdateName = (e) => {\n  //   this.setState({folders: e.target.value})\n  // }\n  // // delets files and closes delete window\n  // onDelete = (path_delete) =>{\n  //   const{folders} = this.state\n  //   const dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\n  //   dbx.filesDelete({path: path_delete})\n  //   .then(response =>{\n  //     let newFolder = folders.filter( folder => folder.name !== response.name)\n  //     this.setState({folders: newFolder })\n  //   })\n  // }\n  // createFile = () =>{\n  //   this.inputRef.current.click();\n  // }\n  // onChangeFile = () =>{\n  //   let file = this.inputRef.current.files[0]\n  //   if(file){\n  //     this.dbx.filesUpload({contents:file, path:`/${file.name}`, autorename: true})\n  //     .then(response=>{\n  //       console.log(response)\n  //       let file = {}\n  //       file[\".tag\"] = \"success\"\n  //       let createFile = {file,metadata: response}\n  //       let uniteFiles = [...this.state.files, createFile]\n  //       this.setState({uniteFiles})\n  //     }).catch(response=>{\n  //       console.log(response)\n  //     })\n  //   }\n  // }\n\n\n  componentDidMount() {\n    // hÃ¤mtar folders\n    this.dbx = new Dropbox({\n      accessToken: localStorage.getItem(\"token\")\n    });\n    this.dbx.filesListFolder({\n      path: \"\"\n    }).then(res => {\n      console.log('HEJ2', res.entries);\n      this.setState({\n        folders: res.entries\n      });\n      const entries = res.entries.filter(x => x[\".tag\"] === \"file\").map(x => ({\n        path: x.path_display\n      }));\n      return this.dbx.filesGetThumbnailBatch({\n        entries: entries\n      });\n    }).then(res => {\n      this.setState({\n        files: res.entries\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.folders === this.state.folders && prevState.files === this.state.files) {\n      this.dbx = new Dropbox({\n        accessToken: localStorage.getItem(\"token\")\n      });\n      let path = this.props.location.pathname;\n      path = path.slice(5);\n      this.dbx.filesListFolder({\n        path: path\n      }).then(res => {\n        this.setState({\n          folders: res.entries\n        });\n        const entries = res.entries.filter(x => x[\".tag\"] === \"file\").map(x => ({\n          path: x.path_display\n        }));\n        return this.dbx.filesGetThumbnailBatch({\n          entries\n        });\n      }).then(res => {\n        this.setState({\n          files: res.entries\n        });\n      });\n    }\n  }\n\n  render() {\n    const {\n      folders,\n      files,\n      URL,\n      filterFolders,\n      filterFiles,\n      showCreateFolder\n    } = this.state;\n    console.log(files, folders);\n    let minaFiler = files.filter(searchFiles => {\n      let search = filterFiles;\n      let name;\n\n      if (searchFiles[\".tag\"] === \"failure\") {\n        return null;\n      } else {\n        name = searchFiles.metadata.name;\n      }\n\n      if (!search) {\n        return searchFiles;\n      } else {\n        if (name.toLowerCase().indexOf(search) === -1) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n    }).map(file => {\n      let image = `data:image/jpeg;base64,${file.thumbnail}`;\n      let fileName;\n      let date_input;\n      let datum;\n      let size;\n      let newSize;\n      let i;\n\n      if (file[\".tag\"] === \"failure\") {\n        return null;\n      } else {\n        fileName = file.metadata.name;\n        date_input = new Date(file.metadata.client_modified);\n        datum = new Date(date_input).toDateString();\n        size = file.metadata.size;\n        i = Math.floor(Math.log(size) / Math.log(1024));\n        newSize = (size / Math.pow(1024, i)).toFixed(2) * 1 + \"\" + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n      }\n\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: image,\n        style: {\n          height: '42px',\n          width: '42px'\n        },\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        onClick: () => this.downloadFile(file.metadata.path_display),\n        href: URL,\n        download: fileName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, fileName), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \" Latest change: \" + datum), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \" Filesize: \" + newSize))));\n    });\n    let minaFolders = folders.filter(searchFolders => {\n      let search = filterFolders;\n\n      if (!search) {\n        return searchFolders;\n      } else {\n        if (searchFolders.name.toLowerCase().indexOf(search)) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n    }).map(folder => {\n      // render img icons to folders !\n      const type = folder['.tag'];\n      let folderThumbnail;\n\n      if (type === 'folder') {\n        folderThumbnail = folderImg;\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: folderThumbnail,\n          style: {\n            height: '42px',\n            width: '42px'\n          },\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }), React.createElement(Link, {\n          to: `/main${folder.path_display}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, folder.name), React.createElement(\"input\", {\n          type: \"text\",\n          value: folder.name,\n          onChange: this.onUpdateName.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.onUpdateName.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, \"Click\"), React.createElement(\"td\", {\n          className: \"dropdownList\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, React.createElement(DropdownOptions, {\n          onDelete: this.onDelete,\n          path: folder.path_display,\n          name: folder.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        })))));\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sideLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Logo\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \" Start \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \" Filter \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \" Paper \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \" Transfer \"))), React.createElement(\"div\", {\n      className: \"bigBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Project X\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.search_FOLDERS_FILES.bind(this),\n      placeholder: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), React.createElement(LogOut, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    })), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Folder/file name\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Folders!\"), minaFolders, React.createElement(\"h2\", {\n      style: {\n        marginTop: '10%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"Files!\"), minaFiler))), React.createElement(\"div\", {\n      className: \"sidebarRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      onClick: this.createFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"Upload File\", React.createElement(\"input\", {\n      onChange: this.onChangeFile,\n      type: \"file\",\n      hidden: \"hidden\",\n      ref: this.inputRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \" Upload Map \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      onClick: this.onShowCreateFolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"Create Folder\"), showCreateFolder === true ? React.createElement(CreateFolder, {\n      showCreateFolder: showCreateFolder,\n      createFolder: this.createFolder,\n      onCloseCreateFolder: this.onCloseCreateFolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }) : null, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, \" New Shared Map \")), React.createElement(\"p\", {\n      className: \"sideText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, \"Choose your option\")))));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/Motar/Desktop/mandatory-advanced-js5/src/Components/Main.js"],"names":["React","Component","Dropbox","Link","LogOut","DropdownOptions","CreateFolder","folderImg","Main","constructor","props","search_FOLDERS_FILES","e","dbx","filesSearch","path","query","target","value","then","res","entries","matches","map","x","metadata","console","log","setState","folders","filter","path_display","filesGetThumbnailBatch","files","downloadFile","file","filesGetThumbnail","objURL","window","URL","createObjectURL","fileBlob","state","show","filterFolders","filterFiles","showCreateFolder","inputRef","createRef","componentDidMount","accessToken","localStorage","getItem","filesListFolder","componentDidUpdate","prevProps","prevState","location","pathname","slice","render","minaFiler","searchFiles","search","name","toLowerCase","indexOf","image","thumbnail","fileName","date_input","datum","size","newSize","i","Date","client_modified","toDateString","Math","floor","pow","toFixed","display","height","width","minaFolders","searchFolders","folder","type","folderThumbnail","onUpdateName","bind","onDelete","marginTop","createFile","onChangeFile","onShowCreateFolder","createFolder","onCloseCreateFolder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { Dropbox } from \"dropbox\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport LogOut from './LogOut'\r\nimport DropdownOptions from './DropdownOptions'\r\nimport CreateFolder from './CreateFolder'\r\n\r\n\r\n\r\nimport '../Css/icons.css'\r\nimport '../Css/mainFiles.css'\r\nimport '../Css/nav.css'\r\nimport '../Css/UlItems.css'\r\n\r\nimport folderImg from '../Img/folder-img.png';\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n          folders: [],\r\n          show: false,\r\n          files: [],\r\n          URL: null,\r\n\r\n          filterFolders: '',\r\n          filterFiles: '',\r\n\r\n          showCreateFolder: false,\r\n        }\r\n        this.inputRef = React.createRef()\r\n    }\r\n    // delets files and closes delete window\r\n    // onDelete = (path_delete) =>{\r\n    //   const{folders} = this.state\r\n    //   this.dbx.filesDelete({path: path_delete})\r\n    //   .then(response =>{\r\n    //     let newFolder = folders.filter( folder => folder.name !== response.name)\r\n    //     this.setState({folders: newFolder})\r\n    //   })\r\n    // }\r\n\r\n    // //Create Folder\r\n    // createFolder = (name) =>{\r\n    //   this.dbx.filesCreateFolderV2({path: `/${name}`, autorename:true })\r\n    //   .then(response =>{\r\n    //     let folder = {}\r\n    //     folder[\".tag\"] = \"folder\"\r\n    //     let newFolder = {...folder,...response.metadata}\r\n    //     let allFolders = [...this.state.folders, newFolder]\r\n    //     this.setState({folders: allFolders})\r\n    //   }).catch(response=>{\r\n    //     console.log(response)\r\n    //   })\r\n    // }\r\n    // //shows the window when click on create folder\r\n    // onShowCreateFolder= () =>{\r\n    //   this.setState({showCreateFolder: true})\r\n      \r\n    // }\r\n    // //closes the window when click on create folder\r\n    // onCloseCreateFolder = () =>{\r\n    //   this.setState({showCreateFolder: false})\r\n    // }\r\n\r\n    // onUpdateName = (e) => {\r\n    //   this.setState({folders: e.target.value})\r\n    // }\r\n\r\n   \r\n    // // delets files and closes delete window\r\n    // onDelete = (path_delete) =>{\r\n    //   const{folders} = this.state\r\n    //   const dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\r\n    //   dbx.filesDelete({path: path_delete})\r\n    //   .then(response =>{\r\n    //     let newFolder = folders.filter( folder => folder.name !== response.name)\r\n    //     this.setState({folders: newFolder })\r\n    //   })\r\n    // }\r\n    // createFile = () =>{\r\n    //   this.inputRef.current.click();\r\n      \r\n    // }\r\n    // onChangeFile = () =>{\r\n    //   let file = this.inputRef.current.files[0]\r\n    //   if(file){\r\n    //     this.dbx.filesUpload({contents:file, path:`/${file.name}`, autorename: true})\r\n    //     .then(response=>{\r\n    //       console.log(response)\r\n    //       let file = {}\r\n    //       file[\".tag\"] = \"success\"\r\n    //       let createFile = {file,metadata: response}\r\n    //       let uniteFiles = [...this.state.files, createFile]\r\n    //       this.setState({uniteFiles})\r\n    //     }).catch(response=>{\r\n    //       console.log(response)\r\n    //     })\r\n    //   }\r\n    // }\r\n\r\n    componentDidMount() {\r\n      // hÃ¤mtar folders\r\n      this.dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\r\n      this.dbx.filesListFolder({ path: \"\" })\r\n        .then((res) => {\r\n          console.log('HEJ2', res.entries);\r\n          this.setState({ folders: res.entries });\r\n\r\n        const entries = res.entries\r\n          .filter(x => x[\".tag\"] === \"file\")\r\n          .map((x) => ({ path: x.path_display }));\r\n        return this.dbx.filesGetThumbnailBatch({\r\n          entries: entries,\r\n        });\r\n        })\r\n        .then((res) => {\r\n          this.setState({ files: res.entries });\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (prevState.folders === this.state.folders && prevState.files === this.state.files) {\r\n      this.dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\r\n\r\n      let path = this.props.location.pathname;\r\n      path = path.slice(5);\r\n      this.dbx.filesListFolder({ path: path })\r\n      .then((res) => {\r\n        this.setState({ folders: res.entries })\r\n\r\n        const entries = res.entries\r\n        .filter(x => x[\".tag\"] === \"file\")\r\n        .map((x) => ({ path: x.path_display }));\r\n      return this.dbx.filesGetThumbnailBatch({ entries });\r\n      })\r\n      .then((res) => {\r\n        this.setState({ files: res.entries });\r\n      });\r\n  }\r\n  }\r\n\r\n  search_FOLDERS_FILES = (e) => {\r\n    /*this.setState({ \r\n      filterFolders: e.target.value, \r\n      filterFiles: e.target.value \r\n    });*/\r\n\r\n    this.dbx.filesSearch({ path: '' ,query: e.target.value})\r\n    .then(res => {\r\n      let entries = res.matches.map(x => x.metadata);\r\n\r\n      console.log('HEJ2', entries);\r\n      this.setState({ folders: entries });\r\n\r\n      entries = entries\r\n        .filter(x => x[\".tag\"] === \"file\")\r\n        .map((x) => ({ path: x.path_display }));\r\n      return this.dbx.filesGetThumbnailBatch({\r\n        entries: entries,\r\n      });\r\n      })\r\n      .then((res) => {\r\n        this.setState({ files: res.entries });\r\n      });\r\n  }\r\n\r\n  downloadFile = (file) => {\r\n    this.dbx.filesGetThumbnail({\"path\": file})\r\n      .then(res => {\r\n        console.log('HEJ 3', res);\r\n        let objURL = window.URL.createObjectURL(res.fileBlob);\r\n        this.setState({ URL: objURL });\r\n      });\r\n  }\r\n\r\n    render() {\r\n      const { folders, files, URL, filterFolders, filterFiles, showCreateFolder } = this.state;\r\n\r\n      console.log(files, folders);\r\n\r\n      let minaFiler = files.filter((searchFiles) => {\r\n        let search = filterFiles;\r\n        let name\r\n\r\n        if(searchFiles[\".tag\"] === \"failure\"){\r\n          return null\r\n        } else {\r\n          name = searchFiles.metadata.name;\r\n        }\r\n\r\n        if (!search) {\r\n          return searchFiles;\r\n        }\r\n        else {\r\n          if (name.toLowerCase().indexOf(search) === -1) {\r\n            return false;\r\n          }\r\n          else {\r\n            return true;\r\n          }\r\n        }\r\n      }).map(file => {\r\n        let image = `data:image/jpeg;base64,${file.thumbnail}`;\r\n\r\n        let fileName\r\n        let date_input\r\n        let datum\r\n        let size\r\n        let newSize\r\n        let i\r\n\r\n        if(file[\".tag\"] === \"failure\"){\r\n          return null\r\n        }\r\n        else {\r\n\r\n          fileName = file.metadata.name;\r\n          date_input = new Date((file.metadata.client_modified));\r\n          datum = new Date(date_input).toDateString();\r\n\r\n          size = file.metadata.size;\r\n          i = Math.floor(Math.log(size) / Math.log(1024));\r\n          newSize = (size / Math.pow(1024, i)).toFixed(2) * 1 + \"\"+['B', 'kB', 'MB', 'GB', 'TB'][i];\r\n\r\n        }\r\n\r\n        return (\r\n          <tr>\r\n            <td>\r\n            <div style={{ display: 'flex' }}>\r\n              <img src={image} style={{ height: '42px', width: '42px' }} alt=\"\"/>\r\n              <a onClick={() => this.downloadFile(file.metadata.path_display)} href={URL} download={fileName}>{fileName}</a>\r\n\r\n              <span>{\" Latest change: \" + datum}</span>\r\n\r\n              <span>{\" Filesize: \" + newSize}</span>\r\n            </div>\r\n            </td>\r\n          </tr>\r\n        )\r\n      })\r\n\r\n\r\n      let minaFolders = folders.filter((searchFolders) => {\r\n        let search = filterFolders;\r\n\r\n        if (!search) {\r\n          return searchFolders;\r\n        }\r\n        else {\r\n          if (searchFolders.name.toLowerCase().indexOf(search)) {\r\n            return false;\r\n          }\r\n          else {\r\n            return true;\r\n          }\r\n        }\r\n      }).map(folder => {\r\n        // render img icons to folders !\r\n\r\n        const type = folder['.tag'];\r\n        let folderThumbnail\r\n\r\n        if (type === 'folder') {\r\n          folderThumbnail = folderImg;\r\n        return (\r\n          <tr>\r\n            <td>\r\n            <div style={{ display: 'flex' }}>\r\n\r\n            <img src={folderThumbnail} style={{ height: '42px', width: '42px' }} alt=\"\"/>\r\n                <Link to={`/main${folder.path_display}`}>\r\n                  {folder.name}\r\n                </Link>\r\n                <input  type=\"text\" value={folder.name}  onChange={this.onUpdateName.bind(this)}/>\r\n                <button onClick={this.onUpdateName.bind(this)}>Click</button>\r\n                <td className=\"dropdownList\">\r\n\r\n                <DropdownOptions\r\n                  onDelete={this.onDelete}\r\n                  path={folder.path_display}\r\n                  name={folder.name}\r\n                  />\r\n                  </td>\r\n            </div>\r\n            </td>\r\n          </tr>\r\n        )\r\n      }\r\n      })\r\n\r\n\r\n        return (\r\n          <div className=\"App\" >\r\n        <div className=\"sideLeft\">\r\n          <div className=\"Logo\">\r\n            Logo\r\n          </div>\r\n          <ul>\r\n            <li> Start </li>\r\n            <br/>\r\n            <li> Filter </li>\r\n            <br/>\r\n            <li> Paper </li>\r\n            <br/>\r\n            <li> Transfer </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className={\"bigBox\"}>\r\n          <header>\r\n            <h1>Project X</h1>\r\n              <input \r\n                type=\"text\" \r\n                onChange={this.search_FOLDERS_FILES.bind(this)} \r\n                placeholder=\"Search\"\r\n              />\r\n              <LogOut/>\r\n          </header>\r\n\r\n          <main>\r\n\r\n          <div className=\"files\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Folder/file name</th>\r\n                      </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n                  <h2>Folders!</h2>\r\n                    {minaFolders}\r\n\r\n                  <h2 style={{ marginTop: '10%' }}>Files!</h2>\r\n                    {minaFiler}\r\n\r\n                </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <div className=\"sidebarRight\">\r\n            <ul>\r\n\r\n                <li onClick={this.createFile}>Upload File<input onChange={this.onChangeFile} type=\"file\" hidden=\"hidden\" ref={this.inputRef}/> </li>\r\n                <br />\r\n                <li> Upload Map </li>\r\n                <br/>\r\n                <li onClick={this.onShowCreateFolder}>\r\n                Create Folder\r\n                </li>\r\n                {showCreateFolder === true ?\r\n                <CreateFolder showCreateFolder={showCreateFolder} createFolder={this.createFolder} onCloseCreateFolder={this.onCloseCreateFolder}/>\r\n                : null}\r\n                <br />\r\n                <li> New Shared Map </li>\r\n            </ul>\r\n              <p className=\"sideText\">Choose your option</p>\r\n            \r\n            </div>\r\n          </main>\r\n        </div>\r\n    </div>\r\n      )\r\n    }\r\n  }\r\n    \r\nexport default Main\r\n"]},"metadata":{},"sourceType":"module"}