{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Motar\\\\Desktop\\\\mandatory-advanced-js5\\\\src\\\\Components\\\\Main.js\";\nimport React, { Component } from 'react';\nimport { Dropbox } from \"dropbox\";\nimport { Link } from 'react-router-dom';\nimport LogOut from './LogOut';\nimport DropdownOptions from './DropdownOptions';\nimport CreateFolder from './CreateFolder';\nimport '../Css/icons.css';\nimport '../Css/mainFiles.css';\nimport '../Css/nav.css';\nimport '../Css/UlItems.css';\nimport folderImg from '../Img/folder-img.png';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDelete = path_delete => {\n      const {\n        folders\n      } = this.state;\n      this.dbx.filesDelete({\n        path: path_delete\n      }).then(response => {\n        let newFolder = folders.filter(folder => folder.name !== response.name);\n        this.setState({\n          folders: newFolder\n        });\n      });\n    };\n\n    this.createFolder = name => {\n      this.dbx.filesCreateFolderV2({\n        path: `/${name}`,\n        autorename: true\n      }).then(response => {\n        let folder = {};\n        folder[\".tag\"] = \"folder\";\n        let newFolder = { ...folder,\n          ...response.metadata\n        };\n        let allFolders = [...this.state.folders, newFolder];\n        this.setState({\n          folders: allFolders\n        });\n      }).catch(response => {\n        console.log(response);\n      });\n    };\n\n    this.onShowCreateFolder = () => {\n      this.setState({\n        showCreateFolder: true\n      });\n    };\n\n    this.onCloseCreateFolder = () => {\n      this.setState({\n        showCreateFolder: false\n      });\n    };\n\n    this.onUpdateName = e => {\n      // this.setState({folders: e.target.value})\n      this.dbx.filesMoveV2({\n        from_path: '',\n        to_path: e\n      });\n    };\n\n    this.onDelete = path_delete => {\n      const {\n        folders\n      } = this.state;\n      const dbx = new Dropbox({\n        accessToken: localStorage.getItem(\"token\")\n      });\n      dbx.filesDelete({\n        path: path_delete\n      }).then(response => {\n        let newFolder = folders.filter(folder => folder.name !== response.name);\n        this.setState({\n          folders: newFolder\n        });\n      });\n    };\n\n    this.createFile = () => {\n      this.inputRef.current.click();\n    };\n\n    this.onChangeFile = () => {\n      let file = this.inputRef.current.files[0];\n\n      if (file) {\n        this.dbx.filesUpload({\n          contents: file,\n          path: `/${file.name}`,\n          autorename: true\n        }).then(response => {\n          console.log(response);\n          let file = {};\n          file[\".tag\"] = \"success\";\n          let createFile = {\n            file,\n            metadata: response\n          };\n          let uniteFiles = [...this.state.files, createFile];\n          this.setState({\n            uniteFiles\n          });\n        }).catch(response => {\n          console.log(response);\n        });\n      }\n    };\n\n    this.search_FOLDERS_FILES = e => {\n      /*this.setState({ \r\n        filterFolders: e.target.value, \r\n        filterFiles: e.target.value \r\n      });*/\n      this.dbx.filesSearch({\n        path: '',\n        query: e.target.value\n      }).then(res => {\n        let entries = res.matches.map(x => x.metadata);\n        console.log('HEJ2', entries);\n        this.setState({\n          folders: entries\n        });\n        entries = entries.filter(x => x[\".tag\"] === \"file\").map(x => ({\n          path: x.path_display\n        }));\n        return this.dbx.filesGetThumbnailBatch({\n          entries: entries\n        });\n      }).then(res => {\n        this.setState({\n          files: res.entries\n        });\n      });\n    };\n\n    this.downloadFile = file => {\n      this.dbx.filesGetThumbnail({\n        \"path\": file\n      }).then(res => {\n        console.log('HEJ 3', res);\n        let objURL = window.URL.createObjectURL(res.fileBlob);\n        this.setState({\n          URL: objURL\n        });\n      });\n    };\n\n    this.state = {\n      folders: [],\n      show: false,\n      files: [],\n      URL: null,\n      filterFolders: '',\n      filterFiles: '',\n      showCreateFolder: false\n    };\n    this.inputRef = React.createRef();\n  } // delets files and closes delete window\n\n\n  componentDidMount() {\n    // hÃ¤mtar folders\n    this.dbx = new Dropbox({\n      accessToken: localStorage.getItem(\"token\")\n    });\n    this.dbx.filesListFolder({\n      path: \"\"\n    }).then(res => {\n      console.log('HEJ2', res.entries);\n      this.setState({\n        folders: res.entries\n      });\n      const entries = res.entries.filter(x => x[\".tag\"] === \"file\").map(x => ({\n        path: x.path_display\n      }));\n      return this.dbx.filesGetThumbnailBatch({\n        entries: entries\n      });\n    }).then(res => {\n      this.setState({\n        files: res.entries\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.folders === this.state.folders && prevState.files === this.state.files) {\n      this.dbx = new Dropbox({\n        accessToken: localStorage.getItem(\"token\")\n      });\n      let path = this.props.location.pathname;\n      path = path.slice(5);\n      this.dbx.filesListFolder({\n        path: path\n      }).then(res => {\n        this.setState({\n          folders: res.entries\n        });\n        const entries = res.entries.filter(x => x[\".tag\"] === \"file\").map(x => ({\n          path: x.path_display\n        }));\n        return this.dbx.filesGetThumbnailBatch({\n          entries\n        });\n      }).then(res => {\n        this.setState({\n          files: res.entries\n        });\n      });\n    }\n  }\n\n  render() {\n    const {\n      folders,\n      files,\n      URL,\n      filterFolders,\n      filterFiles,\n      showCreateFolder\n    } = this.state;\n    console.log(files, folders);\n    let minaFiler = files.filter(searchFiles => {\n      let search = filterFiles;\n      let name;\n\n      if (searchFiles[\".tag\"] === \"failure\") {\n        return null;\n      } else {\n        name = searchFiles.metadata.name;\n      }\n\n      if (!search) {\n        return searchFiles;\n      } else {\n        if (name.toLowerCase().indexOf(search) === -1) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n    }).map(file => {\n      let image = `data:image/jpeg;base64,${file.thumbnail}`;\n      let fileName;\n      let date_input;\n      let datum;\n      let size;\n      let newSize;\n      let i;\n\n      if (file[\".tag\"] === \"failure\") {\n        return null;\n      } else {\n        fileName = file.metadata.name;\n        date_input = new Date(file.metadata.client_modified);\n        datum = new Date(date_input).toDateString();\n        size = file.metadata.size;\n        i = Math.floor(Math.log(size) / Math.log(1024));\n        newSize = (size / Math.pow(1024, i)).toFixed(2) * 1 + \"\" + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n      }\n\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: image,\n        style: {\n          height: '42px',\n          width: '42px'\n        },\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        onClick: () => this.downloadFile(file.metadata.path_display),\n        href: URL,\n        download: fileName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, fileName), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \" Latest change: \" + datum), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \" Filesize: \" + newSize))));\n    });\n    let minaFolders = folders.filter(searchFolders => {\n      let search = filterFolders;\n\n      if (!search) {\n        return searchFolders;\n      } else {\n        if (searchFolders.name.toLowerCase().indexOf(search)) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n    }).map(folder => {\n      // render img icons to folders !\n      const type = folder['.tag'];\n      let folderThumbnail;\n\n      if (type === 'folder') {\n        folderThumbnail = folderImg;\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: folderThumbnail,\n          style: {\n            height: '42px',\n            width: '42px'\n          },\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }), React.createElement(Link, {\n          to: `/main${folder.path_display}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, folder.name), React.createElement(\"input\", {\n          type: \"text\",\n          value: folder.name,\n          onChange: this.onUpdateName.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }), React.createElement(\"td\", {\n          className: \"dropdownList\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, React.createElement(DropdownOptions, {\n          onDelete: this.onDelete,\n          path: folder.path_display,\n          name: folder.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        })))));\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sideLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Logo\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \" Start \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \" Filter \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \" Paper \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \" Transfer \"))), React.createElement(\"div\", {\n      className: \"bigBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"Project X\"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.search_FOLDERS_FILES.bind(this),\n      placeholder: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), React.createElement(LogOut, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    })), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Folder/file name\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Folders!\"), minaFolders, React.createElement(\"h2\", {\n      style: {\n        marginTop: '10%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"Files!\"), minaFiler))), React.createElement(\"div\", {\n      className: \"sidebarRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      onClick: this.createFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"Upload File\", React.createElement(\"input\", {\n      onChange: this.onChangeFile,\n      type: \"file\",\n      hidden: \"hidden\",\n      ref: this.inputRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \" Upload Map \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      onClick: this.onShowCreateFolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \"Create Folder\"), showCreateFolder === true ? React.createElement(CreateFolder, {\n      showCreateFolder: showCreateFolder,\n      createFolder: this.createFolder,\n      onCloseCreateFolder: this.onCloseCreateFolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }) : null, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, \" New Shared Map \")), React.createElement(\"p\", {\n      className: \"sideText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Choose your option\")))));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/Motar/Desktop/mandatory-advanced-js5/src/Components/Main.js"],"names":["React","Component","Dropbox","Link","LogOut","DropdownOptions","CreateFolder","folderImg","Main","constructor","props","onDelete","path_delete","folders","state","dbx","filesDelete","path","then","response","newFolder","filter","folder","name","setState","createFolder","filesCreateFolderV2","autorename","metadata","allFolders","catch","console","log","onShowCreateFolder","showCreateFolder","onCloseCreateFolder","onUpdateName","e","filesMoveV2","from_path","to_path","accessToken","localStorage","getItem","createFile","inputRef","current","click","onChangeFile","file","files","filesUpload","contents","uniteFiles","search_FOLDERS_FILES","filesSearch","query","target","value","res","entries","matches","map","x","path_display","filesGetThumbnailBatch","downloadFile","filesGetThumbnail","objURL","window","URL","createObjectURL","fileBlob","show","filterFolders","filterFiles","createRef","componentDidMount","filesListFolder","componentDidUpdate","prevProps","prevState","location","pathname","slice","render","minaFiler","searchFiles","search","toLowerCase","indexOf","image","thumbnail","fileName","date_input","datum","size","newSize","i","Date","client_modified","toDateString","Math","floor","pow","toFixed","display","height","width","minaFolders","searchFolders","type","folderThumbnail","bind","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { Dropbox } from \"dropbox\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport LogOut from './LogOut'\r\nimport DropdownOptions from './DropdownOptions'\r\nimport CreateFolder from './CreateFolder'\r\n\r\n\r\n\r\nimport '../Css/icons.css'\r\nimport '../Css/mainFiles.css'\r\nimport '../Css/nav.css'\r\nimport '../Css/UlItems.css'\r\n\r\nimport folderImg from '../Img/folder-img.png';\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n          folders: [],\r\n          show: false,\r\n          files: [],\r\n          URL: null,\r\n\r\n          filterFolders: '',\r\n          filterFiles: '',\r\n\r\n          showCreateFolder: false,\r\n        }\r\n        this.inputRef = React.createRef()\r\n    }\r\n    // delets files and closes delete window\r\n    onDelete = (path_delete) =>{\r\n      const{folders} = this.state\r\n      this.dbx.filesDelete({path: path_delete})\r\n      .then(response =>{\r\n        let newFolder = folders.filter( folder => folder.name !== response.name)\r\n        this.setState({folders: newFolder})\r\n      })\r\n    }\r\n\r\n    //Create Folder\r\n    createFolder = (name) =>{\r\n      this.dbx.filesCreateFolderV2({path: `/${name}`, autorename:true })\r\n      .then(response =>{\r\n        let folder = {}\r\n        folder[\".tag\"] = \"folder\"\r\n        let newFolder = {...folder,...response.metadata}\r\n        let allFolders = [...this.state.folders, newFolder]\r\n        this.setState({folders: allFolders})\r\n      }).catch(response=>{\r\n        console.log(response)\r\n      })\r\n    }\r\n    //shows the window when click on create folder\r\n    onShowCreateFolder= () =>{\r\n      this.setState({showCreateFolder: true})\r\n      \r\n    }\r\n    //closes the window when click on create folder\r\n    onCloseCreateFolder = () =>{\r\n      this.setState({showCreateFolder: false})\r\n    }\r\n\r\n    onUpdateName = (e) => {\r\n      // this.setState({folders: e.target.value})\r\n\r\n      this.dbx.filesMoveV2({\r\n        from_path: '',\r\n        to_path: e\r\n      })\r\n    }\r\n\r\n\r\n    // delets files and closes delete window\r\n    onDelete = (path_delete) =>{\r\n      const{folders} = this.state\r\n      const dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\r\n      dbx.filesDelete({path: path_delete})\r\n      .then(response =>{\r\n        let newFolder = folders.filter( folder => folder.name !== response.name)\r\n        this.setState({folders: newFolder })\r\n      })\r\n    }\r\n    createFile = () =>{\r\n      this.inputRef.current.click();\r\n      \r\n    }\r\n    onChangeFile = () =>{\r\n      let file = this.inputRef.current.files[0]\r\n      if(file){\r\n        this.dbx.filesUpload({contents:file, path:`/${file.name}`, autorename: true})\r\n        .then(response=>{\r\n          console.log(response)\r\n          let file = {}\r\n          file[\".tag\"] = \"success\"\r\n          let createFile = {file,metadata: response}\r\n          let uniteFiles = [...this.state.files, createFile]\r\n          this.setState({uniteFiles})\r\n        }).catch(response=>{\r\n          console.log(response)\r\n        })\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      // hÃ¤mtar folders\r\n      this.dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\r\n      this.dbx.filesListFolder({ path: \"\" })\r\n        .then((res) => {\r\n          console.log('HEJ2', res.entries);\r\n          this.setState({ folders: res.entries });\r\n\r\n        const entries = res.entries\r\n          .filter(x => x[\".tag\"] === \"file\")\r\n          .map((x) => ({ path: x.path_display }));\r\n        return this.dbx.filesGetThumbnailBatch({\r\n          entries: entries,\r\n        });\r\n        })\r\n        .then((res) => {\r\n          this.setState({ files: res.entries });\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (prevState.folders === this.state.folders && prevState.files === this.state.files) {\r\n      this.dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\r\n\r\n      let path = this.props.location.pathname;\r\n      path = path.slice(5);\r\n      this.dbx.filesListFolder({ path: path })\r\n      .then((res) => {\r\n        this.setState({ folders: res.entries })\r\n\r\n        const entries = res.entries\r\n        .filter(x => x[\".tag\"] === \"file\")\r\n        .map((x) => ({ path: x.path_display }));\r\n      return this.dbx.filesGetThumbnailBatch({ entries });\r\n      })\r\n      .then((res) => {\r\n        this.setState({ files: res.entries });\r\n      });\r\n  }\r\n  }\r\n\r\n  search_FOLDERS_FILES = (e) => {\r\n    /*this.setState({ \r\n      filterFolders: e.target.value, \r\n      filterFiles: e.target.value \r\n    });*/\r\n\r\n    this.dbx.filesSearch({ path: '' ,query: e.target.value})\r\n    .then(res => {\r\n      let entries = res.matches.map(x => x.metadata);\r\n\r\n      console.log('HEJ2', entries);\r\n      this.setState({ folders: entries });\r\n\r\n      entries = entries\r\n        .filter(x => x[\".tag\"] === \"file\")\r\n        .map((x) => ({ path: x.path_display }));\r\n      return this.dbx.filesGetThumbnailBatch({\r\n        entries: entries,\r\n      });\r\n      })\r\n      .then((res) => {\r\n        this.setState({ files: res.entries });\r\n      });\r\n  }\r\n\r\n  downloadFile = (file) => {\r\n    this.dbx.filesGetThumbnail({\"path\": file})\r\n      .then(res => {\r\n        console.log('HEJ 3', res);\r\n        let objURL = window.URL.createObjectURL(res.fileBlob);\r\n        this.setState({ URL: objURL });\r\n      });\r\n  }\r\n\r\n    render() {\r\n      const { folders, files, URL, filterFolders, filterFiles, showCreateFolder } = this.state;\r\n\r\n      console.log(files, folders);\r\n\r\n      let minaFiler = files.filter((searchFiles) => {\r\n        let search = filterFiles;\r\n        let name\r\n\r\n        if(searchFiles[\".tag\"] === \"failure\"){\r\n          return null\r\n        } else {\r\n          name = searchFiles.metadata.name;\r\n        }\r\n\r\n        if (!search) {\r\n          return searchFiles;\r\n        }\r\n        else {\r\n          if (name.toLowerCase().indexOf(search) === -1) {\r\n            return false;\r\n          }\r\n          else {\r\n            return true;\r\n          }\r\n        }\r\n      }).map(file => {\r\n        let image = `data:image/jpeg;base64,${file.thumbnail}`;\r\n\r\n        let fileName\r\n        let date_input\r\n        let datum\r\n        let size\r\n        let newSize\r\n        let i\r\n\r\n        if(file[\".tag\"] === \"failure\"){\r\n          return null\r\n        }\r\n        else {\r\n\r\n          fileName = file.metadata.name;\r\n          date_input = new Date((file.metadata.client_modified));\r\n          datum = new Date(date_input).toDateString();\r\n\r\n          size = file.metadata.size;\r\n          i = Math.floor(Math.log(size) / Math.log(1024));\r\n          newSize = (size / Math.pow(1024, i)).toFixed(2) * 1 + \"\"+['B', 'kB', 'MB', 'GB', 'TB'][i];\r\n\r\n        }\r\n\r\n        return (\r\n          <tr>\r\n            <td>\r\n            <div style={{ display: 'flex' }}>\r\n              <img src={image} style={{ height: '42px', width: '42px' }} alt=\"\"/>\r\n              <a onClick={() => this.downloadFile(file.metadata.path_display)} href={URL} download={fileName}>{fileName}</a>\r\n\r\n              <span>{\" Latest change: \" + datum}</span>\r\n\r\n              <span>{\" Filesize: \" + newSize}</span>\r\n            </div>\r\n            </td>\r\n          </tr>\r\n        )\r\n      })\r\n\r\n\r\n      let minaFolders = folders.filter((searchFolders) => {\r\n        let search = filterFolders;\r\n\r\n        if (!search) {\r\n          return searchFolders;\r\n        }\r\n        else {\r\n          if (searchFolders.name.toLowerCase().indexOf(search)) {\r\n            return false;\r\n          }\r\n          else {\r\n            return true;\r\n          }\r\n        }\r\n      }).map(folder => {\r\n        // render img icons to folders !\r\n\r\n        const type = folder['.tag'];\r\n        let folderThumbnail\r\n\r\n        if (type === 'folder') {\r\n          folderThumbnail = folderImg;\r\n        return (\r\n          <tr>\r\n            <td>\r\n            <div style={{ display: 'flex' }}>\r\n\r\n            <img src={folderThumbnail} style={{ height: '42px', width: '42px' }} alt=\"\"/>\r\n                <Link to={`/main${folder.path_display}`}>\r\n                  {folder.name}\r\n                </Link>\r\n                <input  type=\"text\" value={folder.name}  onChange={this.onUpdateName.bind(this)}/>\r\n                {/* <button onClick={this.onUpdateName.bind(this)}>Click</button> */}\r\n                <td className=\"dropdownList\">\r\n\r\n                <DropdownOptions\r\n                  onDelete={this.onDelete}\r\n                  path={folder.path_display}\r\n                  name={folder.name}\r\n                  />\r\n                  </td>\r\n            </div>\r\n            </td>\r\n          </tr>\r\n        )\r\n      }\r\n      })\r\n\r\n\r\n        return (\r\n          <div className=\"App\" >\r\n        <div className=\"sideLeft\">\r\n          <div className=\"Logo\">\r\n            Logo\r\n          </div>\r\n          <ul>\r\n            <li> Start </li>\r\n            <br/>\r\n            <li> Filter </li>\r\n            <br/>\r\n            <li> Paper </li>\r\n            <br/>\r\n            <li> Transfer </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className={\"bigBox\"}>\r\n          <header>\r\n            <h1>Project X</h1>\r\n              <input \r\n                type=\"text\" \r\n                onChange={this.search_FOLDERS_FILES.bind(this)} \r\n                placeholder=\"Search\"\r\n              />\r\n              <LogOut/>\r\n          </header>\r\n\r\n          <main>\r\n\r\n          <div className=\"files\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Folder/file name</th>\r\n                      </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n                  <h2>Folders!</h2>\r\n                    {minaFolders}\r\n\r\n                  <h2 style={{ marginTop: '10%' }}>Files!</h2>\r\n                    {minaFiler}\r\n\r\n                </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <div className=\"sidebarRight\">\r\n            <ul>\r\n\r\n                <li onClick={this.createFile}>Upload File<input onChange={this.onChangeFile} type=\"file\" hidden=\"hidden\" ref={this.inputRef}/> </li>\r\n                <br />\r\n                <li> Upload Map </li>\r\n                <br/>\r\n                <li onClick={this.onShowCreateFolder}>\r\n                Create Folder\r\n                </li>\r\n                {showCreateFolder === true ?\r\n                <CreateFolder showCreateFolder={showCreateFolder} createFolder={this.createFolder} onCloseCreateFolder={this.onCloseCreateFolder}/>\r\n                : null}\r\n                <br />\r\n                <li> New Shared Map </li>\r\n            </ul>\r\n              <p className=\"sideText\">Choose your option</p>\r\n            \r\n            </div>\r\n          </main>\r\n        </div>\r\n    </div>\r\n      )\r\n    }\r\n  }\r\n    \r\nexport default Main\r\n"]},"metadata":{},"sourceType":"module"}