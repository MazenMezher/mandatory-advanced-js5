{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Motar\\\\Desktop\\\\mandatory-advanced-js5\\\\src\\\\Components\\\\Main.js\";\nimport React, { Component } from 'react';\nimport { Dropbox } from \"dropbox\";\nimport { Link } from 'react-router-dom';\nimport LogOut from './LogOut';\nimport '../Css/nav.css';\nimport folderImg from '../Img/folder-img.png';\nimport fileImg from '../Img/file-img.png';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      folders: [],\n      thumbnail: {},\n      files: []\n    };\n  }\n\n  componentDidMount() {\n    // hÃ¤mtar folders\n    this.dbx = new Dropbox({\n      accessToken: localStorage.getItem(\"token\")\n    });\n    this.dbx.filesListFolder({\n      path: \"\"\n    }).then(res => {\n      console.log('HEJ2', res.entries);\n      this.setState({\n        folders: res.entries\n      }); // const entries = res.entries\n      //   .filter(x => x[\".tag\"] === \"file\")\n      //   .map((x) => ({ path: x.path_display }));\n      // return this.dbx.filesGetThumbnailBatch({ entries });\n      // })\n      // .then((res) => {\n      //   console.log(\"HEJ\", res);\n      //   this.setState({ files: res.entries });\n      // });\n      // const entries = res.entries\n      //   .filter(x => x[\".tag\"] === \"file\")\n      //   .map((x) => ({ path: x.path_display }));\n      // return this.dbx.filesGetThumbnailBatch({\n      //   entries: entries,\n      // });\n    }); // .then((res) => {\n    //   console.log(\"HEJ\", res);\n    //   this.setState({ files: res.entries });\n    // });\n  }\n\n  componentDidUpdate(prevprops, prevState) {\n    if (prevState.folders === this.state.folders && prevState.files === this.state.files) {\n      this.dbx = new Dropbox({\n        accessToken: localStorage.getItem(\"token\")\n      });\n      let path = this.props.location.pathname;\n      path = path.slice(5);\n      this.dbx.filesListFolder({\n        path: path\n      }).then(res => {\n        console.log(\"HEJ\", res);\n        this.setState({\n          folders: res.entries\n        });\n        const entries = res.entries.filter(x => x[\".tag\"] === \"file\").map(x => ({\n          path: x.path_display\n        }));\n        return this.dbx.filesGetThumbnailBatch({\n          entries\n        });\n      }).then(res => {\n        console.log(\"HEJ\", res);\n        this.setState({\n          files: res.entries\n        });\n      });\n      console.log(this.props.location.pathname);\n    }\n  } // downloadFile = (file) => {\n  //   this.dbx\n  // }\n\n\n  render() {\n    const {\n      folders,\n      files\n    } = this.state;\n    let minaFiler = files.map(file => {\n      console.log('KING', file);\n      console.log('KING  thumbnail', file.thumbnail);\n      let image = `data:image/jpeg;base64,${file.thumbnail}`; // console.log('KING', file.metadata.name);\n\n      console.log(' KING //////////////////////////////////////////////////////////////////////'); // console.log('KING', file.metadata.name);\n\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: image,\n        style: {\n          height: '42px',\n          width: '42px'\n        },\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, file.metadata.name), React.createElement(\"button\", {\n        onClick: () => this.downloadFile(file.metadata.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Download file!\")));\n    });\n    let minaFolders = folders.map(folder => {\n      console.log('KING2', folders); // render img icon to files and folders!\n\n      const type = folder['.tag'];\n      let folderThumbnail; // type === 'folder' ? folderThumbnail = folderImg : folderThumbnail = fileImg;\n\n      if (type === 'folder') {\n        folderThumbnail = folderImg; // else {\n        //   folderThumbnail = fileImg;\n        // }\n        // let objectUrl = URL.createObjectURL(thumbnail.fileBlob);\n\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: folderThumbnail,\n          style: {\n            height: '42px',\n            width: '42px'\n          },\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }), React.createElement(Link, {\n          to: `/main${folder.path_display}`,\n          style: {\n            border: '1px solid'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, folder.name))));\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sideLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Logo\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \" Link 1 \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \" Link 7 \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \" Link 3 \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \" Link 1 \"))), React.createElement(\"div\", {\n      className: \"bigBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Search\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(LogOut, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Folder/file name\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, minaFolders, minaFiler))), React.createElement(\"div\", {\n      className: \"sidebarRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \" Link 1 \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \" Link 1 \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \" Link 1 \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \" Link 1 \"))))));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/Motar/Desktop/mandatory-advanced-js5/src/Components/Main.js"],"names":["React","Component","Dropbox","Link","LogOut","folderImg","fileImg","Main","constructor","props","state","folders","thumbnail","files","componentDidMount","dbx","accessToken","localStorage","getItem","filesListFolder","path","then","res","console","log","entries","setState","componentDidUpdate","prevprops","prevState","location","pathname","slice","filter","x","map","path_display","filesGetThumbnailBatch","render","minaFiler","file","image","display","height","width","metadata","name","downloadFile","minaFolders","folder","type","folderThumbnail","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { Dropbox } from \"dropbox\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport LogOut from './LogOut';\r\n\r\nimport '../Css/nav.css'\r\n\r\nimport folderImg from '../Img/folder-img.png';\r\nimport fileImg from '../Img/file-img.png';\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n          folders: [],\r\n          thumbnail: {},\r\n          files: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      // hÃ¤mtar folders\r\n      this.dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\r\n      this.dbx.filesListFolder({ path: \"\" })\r\n        .then((res) => {\r\n          console.log('HEJ2', res.entries);\r\n          this.setState({ folders: res.entries });\r\n\r\n        // const entries = res.entries\r\n        //   .filter(x => x[\".tag\"] === \"file\")\r\n        //   .map((x) => ({ path: x.path_display }));\r\n        // return this.dbx.filesGetThumbnailBatch({ entries });\r\n        // })\r\n        // .then((res) => {\r\n        //   console.log(\"HEJ\", res);\r\n        //   this.setState({ files: res.entries });\r\n        // });\r\n\r\n        // const entries = res.entries\r\n        //   .filter(x => x[\".tag\"] === \"file\")\r\n        //   .map((x) => ({ path: x.path_display }));\r\n        // return this.dbx.filesGetThumbnailBatch({\r\n        //   entries: entries,\r\n        // });\r\n        })\r\n        // .then((res) => {\r\n        //   console.log(\"HEJ\", res);\r\n        //   this.setState({ files: res.entries });\r\n        // });\r\n\r\n        \r\n    }\r\n\r\n    componentDidUpdate(prevprops, prevState) {\r\n      if (prevState.folders === this.state.folders && prevState.files === this.state.files) {\r\n      this.dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\r\n\r\n      let path = this.props.location.pathname;\r\n      path = path.slice(5);\r\n      this.dbx.filesListFolder({ path: path })\r\n      .then((res) => {\r\n        console.log(\"HEJ\", res)\r\n        this.setState({ folders: res.entries })\r\n\r\n        const entries = res.entries\r\n        .filter(x => x[\".tag\"] === \"file\")\r\n        .map((x) => ({ path: x.path_display }));\r\n      return this.dbx.filesGetThumbnailBatch({ entries });\r\n      })\r\n      .then((res) => {\r\n        console.log(\"HEJ\", res);\r\n        this.setState({ files: res.entries });\r\n      });\r\n        console.log(this.props.location.pathname);\r\n  }\r\n  }\r\n\r\n  // downloadFile = (file) => {\r\n  //   this.dbx\r\n  // }\r\n\r\n    render() {\r\n      const { folders, files } = this.state;\r\n\r\n      let minaFiler = files.map(file => {\r\n        console.log('KING', file);\r\n        console.log('KING  thumbnail', file.thumbnail);\r\n        let image = `data:image/jpeg;base64,${file.thumbnail}`;\r\n        // console.log('KING', file.metadata.name);\r\n        console.log(' KING //////////////////////////////////////////////////////////////////////');\r\n        // console.log('KING', file.metadata.name);\r\n\r\n        return (\r\n          <tr>\r\n            <div style={{ display: 'flex' }}>\r\n                <img src={image} style={{ height: '42px', width: '42px' }} alt=\"\"/>\r\n              {/* <Link to={`/folder${folder.path_display}`} style={{ border: '1px solid' }}> */}\r\n                  <td>{file.metadata.name}</td>\r\n                  <button onClick={() => this.downloadFile(file.metadata.name)}>Download file!</button>\r\n              {/* </Link> */}\r\n            </div>\r\n          </tr>\r\n        )\r\n      })\r\n\r\n      let minaFolders = folders.map(folder => {\r\n        console.log('KING2', folders);\r\n        // render img icon to files and folders!\r\n        const type = folder['.tag'];\r\n        let folderThumbnail\r\n        // type === 'folder' ? folderThumbnail = folderImg : folderThumbnail = fileImg;\r\n\r\n        if (type === 'folder') {\r\n          folderThumbnail = folderImg;\r\n        \r\n        // else {\r\n        //   folderThumbnail = fileImg;\r\n        // }\r\n        // let objectUrl = URL.createObjectURL(thumbnail.fileBlob);\r\n        return (\r\n          <tr>\r\n            <div style={{ display: 'flex' }}>\r\n                <img src={folderThumbnail} style={{ height: '42px', width: '42px' }} alt=\"\"/>\r\n              <Link to={`/main${folder.path_display}`} style={{ border: '1px solid' }}>\r\n                  <td>{folder.name}</td>\r\n              </Link>\r\n            </div>\r\n          </tr>\r\n        )\r\n      }\r\n      })\r\n\r\n        return (\r\n          <div className=\"App\">\r\n        <div className=\"sideLeft\">\r\n          <div>\r\n            Logo\r\n          </div>\r\n          <ul>\r\n            <li> Link 1 </li>\r\n            <li> Link 7 </li>\r\n            <li> Link 3 </li>\r\n            <li> Link 1 </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className={\"bigBox\"}>\r\n          <header>\r\n            <input placeholder=\"Search\" type=\"text\" />\r\n            <LogOut />\r\n          </header>\r\n\r\n          <main>\r\n          <div className=\"files\">\r\n                <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Folder/file name</th>\r\n                      </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n                    {minaFolders}\r\n\r\n                    {minaFiler}\r\n\r\n                    {/* {folders.map(folder => {\r\n                      // render img icon to files and folders!\r\n                      const type = folder['.tag'];\r\n                      let folderThumbnail\r\n                      // type === 'folder' ? folderThumbnail = folderImg : folderThumbnail = fileImg;\r\n\r\n                      if (type === 'folder') {\r\n                        folderThumbnail = folderImg;\r\n                      }\r\n                      else {\r\n                        folderThumbnail = fileImg;\r\n                      }\r\n                      // let objectUrl = URL.createObjectURL(thumbnail.fileBlob);\r\n                      return (\r\n                        <tr>\r\n                          <div style={{ display: 'flex' }}>\r\n                              <img src={folderThumbnail} style={{ height: '42px', width: '42px' }} alt=\"\"/>\r\n                            <Link to={`/folder${folder.path_display}`} style={{ border: '1px solid' }}>\r\n                                <td>{folder.name}</td>\r\n                            </Link>\r\n                          </div>\r\n                        </tr>\r\n                      )\r\n                    })} */}\r\n                </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <div className=\"sidebarRight\">\r\n            <ul>\r\n                <li> Link 1 </li>\r\n                <li> Link 1 </li>\r\n                <li> Link 1 </li>\r\n                <li> Link 1 </li>\r\n            </ul>\r\n            </div>\r\n          </main>\r\n        </div>\r\n    </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Main\r\n"]},"metadata":{},"sourceType":"module"}