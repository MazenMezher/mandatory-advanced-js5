{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Motar\\\\Desktop\\\\mandatory-advanced-js5\\\\src\\\\Components\\\\Main.js\";\nimport React, { Component } from 'react';\nimport { Dropbox } from \"dropbox\";\nimport { Link } from 'react-router-dom';\nimport LogOut from './LogOut';\nimport '../Css/nav.css';\nimport folderImg from '../Img/folder-img.png';\nimport fileImg from '../Img/file-img.png';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      folders: [],\n      thumbnail: {},\n      files: []\n    };\n  }\n\n  componentDidMount() {\n    const dbx = new Dropbox({\n      accessToken: localStorage.getItem(\"token\")\n    });\n    dbx.filesListFolder({\n      path: \"\"\n    }).then(res => {\n      console.log('HEJ2', res.entries);\n      this.setState({\n        folders: res.entries\n      });\n      const entries = res.entries.filter(x => x[\".tag\"] === \"file\").map(x => ({\n        path: x.path_display\n      }));\n      return dbx.filesGetThumbnailBatch({\n        entries\n      });\n    }).then(res => {\n      console.log(\"HEJ\", res.entries);\n      this.setState({\n        files: res.entries\n      });\n    });\n  } // componentDidUpdate() {\n  //   const { folders, files } = this.state;\n  //   folders.map(Files => {\n  //     const type = Files['.tag'];\n  //     if (type === 'file') {\n  //       // console.log(Files.name);\n  //     }\n  //   });\n  //   // console.log(files);\n  //   const dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\n  //   dbx.filesGetThumbnailBatch({  \n  //     entries: [{  \n  //       path: '/image1.png image-142881.jpg',  \n  //       size: 'w32h32',  \n  //       format: 'png',  \n  //     }]  \n  //   })\n  //   // .then(res => console.log(res))\n  // }\n\n\n  render() {\n    const {\n      folders,\n      files\n    } = this.state;\n    let filess = files.map(file => {\n      console.log('KING', file);\n      console.log('KING  thumbnail', file.thumbnail);\n      let image = `data:image/jpeg;base64,${file.thumbnail}`;\n      console.log('KING', file.metadata.name);\n      console.log(' KING //////////////////////////////////////////////////////////////////////'); // console.log('KING', file.metadata.name);\n      // return (\n      //   <tr>\n      //     <div style={{ display: 'flex' }}>\n      //         <img src={image} style={{ height: '42px', width: '42px' }} alt=\"\"/>\n      //       <Link to={`/folder${folder.path_display}`} style={{ border: '1px solid' }}>\n      //           <td>{folder.name}</td>\n      //       </Link>\n      //     </div>\n      //   </tr>\n      // )\n    });\n    let folderss = folders.map(folder => {\n      console.log('KING2', folders); // render img icon to files and folders!\n\n      const type = folder['.tag'];\n      let folderThumbnail; // type === 'folder' ? folderThumbnail = folderImg : folderThumbnail = fileImg;\n\n      if (type === 'folder') {\n        folderThumbnail = folderImg; // else {\n        //   folderThumbnail = fileImg;\n        // }\n        // let objectUrl = URL.createObjectURL(thumbnail.fileBlob);\n\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: folderThumbnail,\n          style: {\n            height: '42px',\n            width: '42px'\n          },\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }), React.createElement(Link, {\n          to: `/folder${folder.path_display}`,\n          style: {\n            border: '1px solid'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, folder.name))));\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sideLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Logo\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \" Link 1 \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \" Link 7 \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \" Link 3 \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \" Link 1 \"))), React.createElement(\"div\", {\n      className: \"bigBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Search\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(LogOut, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Folder/file name\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, folderss, filess))), React.createElement(\"div\", {\n      className: \"sidebarRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \" Link 1 \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \" Link 1 \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \" Link 1 \"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \" Link 1 \"))))));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/Motar/Desktop/mandatory-advanced-js5/src/Components/Main.js"],"names":["React","Component","Dropbox","Link","LogOut","folderImg","fileImg","Main","constructor","props","state","folders","thumbnail","files","componentDidMount","dbx","accessToken","localStorage","getItem","filesListFolder","path","then","res","console","log","entries","setState","filter","x","map","path_display","filesGetThumbnailBatch","render","filess","file","image","metadata","name","folderss","folder","type","folderThumbnail","display","height","width","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { Dropbox } from \"dropbox\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport LogOut from './LogOut';\r\n\r\nimport '../Css/nav.css'\r\n\r\nimport folderImg from '../Img/folder-img.png';\r\nimport fileImg from '../Img/file-img.png';\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n          folders: [],\r\n          thumbnail: {},\r\n          files: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      const dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\r\n      dbx.filesListFolder({ path: \"\" })\r\n        .then((res) => {\r\n          console.log('HEJ2', res.entries);\r\n          this.setState({ folders: res.entries });\r\n\r\n\r\n          const entries = res.entries\r\n            .filter(x => x[\".tag\"] === \"file\")\r\n            .map((x) => ({ path: x.path_display }));\r\n\r\n          return dbx.filesGetThumbnailBatch({ entries });\r\n        })\r\n        .then((res) => {\r\n          console.log(\"HEJ\", res.entries);\r\n          \r\n          this.setState({ files: res.entries });\r\n        });\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //   const { folders, files } = this.state;\r\n    //   folders.map(Files => {\r\n    //     const type = Files['.tag'];\r\n\r\n    //     if (type === 'file') {\r\n    //       // console.log(Files.name);\r\n    //     }\r\n    //   });\r\n\r\n    //   // console.log(files);\r\n\r\n    //   const dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\r\n    //   dbx.filesGetThumbnailBatch({  \r\n    //     entries: [{  \r\n    //       path: '/image1.png image-142881.jpg',  \r\n    //       size: 'w32h32',  \r\n    //       format: 'png',  \r\n    //     }]  \r\n    //   })\r\n    //   // .then(res => console.log(res))\r\n    // }\r\n\r\n    render() {\r\n      const { folders, files } = this.state;\r\n\r\n      let filess = files.map(file => {\r\n        console.log('KING', file);\r\n        console.log('KING  thumbnail', file.thumbnail);\r\n        let image = `data:image/jpeg;base64,${file.thumbnail}`;\r\n        console.log('KING', file.metadata.name);\r\n        console.log(' KING //////////////////////////////////////////////////////////////////////');\r\n        // console.log('KING', file.metadata.name);\r\n\r\n        // return (\r\n        //   <tr>\r\n        //     <div style={{ display: 'flex' }}>\r\n        //         <img src={image} style={{ height: '42px', width: '42px' }} alt=\"\"/>\r\n        //       <Link to={`/folder${folder.path_display}`} style={{ border: '1px solid' }}>\r\n        //           <td>{folder.name}</td>\r\n        //       </Link>\r\n        //     </div>\r\n        //   </tr>\r\n        // )\r\n      })\r\n\r\n      let folderss = folders.map(folder => {\r\n        console.log('KING2', folders);\r\n        // render img icon to files and folders!\r\n        const type = folder['.tag'];\r\n        let folderThumbnail\r\n        // type === 'folder' ? folderThumbnail = folderImg : folderThumbnail = fileImg;\r\n\r\n        if (type === 'folder') {\r\n          folderThumbnail = folderImg;\r\n        \r\n        // else {\r\n        //   folderThumbnail = fileImg;\r\n        // }\r\n        // let objectUrl = URL.createObjectURL(thumbnail.fileBlob);\r\n        return (\r\n          <tr>\r\n            <div style={{ display: 'flex' }}>\r\n                <img src={folderThumbnail} style={{ height: '42px', width: '42px' }} alt=\"\"/>\r\n              <Link to={`/folder${folder.path_display}`} style={{ border: '1px solid' }}>\r\n                  <td>{folder.name}</td>\r\n              </Link>\r\n            </div>\r\n          </tr>\r\n        )\r\n      }\r\n      })\r\n\r\n        return (\r\n          <div className=\"App\">\r\n        <div className=\"sideLeft\">\r\n          <div>\r\n            Logo\r\n          </div>\r\n          <ul>\r\n            <li> Link 1 </li>\r\n            <li> Link 7 </li>\r\n            <li> Link 3 </li>\r\n            <li> Link 1 </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className={\"bigBox\"}>\r\n          <header>\r\n            <input placeholder=\"Search\" type=\"text\" />\r\n            <LogOut />\r\n          </header>\r\n\r\n          <main>\r\n          <div className=\"files\">\r\n                <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Folder/file name</th>\r\n                      </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n                    {folderss}\r\n\r\n                    {filess}\r\n\r\n                    {/* {folders.map(folder => {\r\n                      // render img icon to files and folders!\r\n                      const type = folder['.tag'];\r\n                      let folderThumbnail\r\n                      // type === 'folder' ? folderThumbnail = folderImg : folderThumbnail = fileImg;\r\n\r\n                      if (type === 'folder') {\r\n                        folderThumbnail = folderImg;\r\n                      }\r\n                      else {\r\n                        folderThumbnail = fileImg;\r\n                      }\r\n                      // let objectUrl = URL.createObjectURL(thumbnail.fileBlob);\r\n                      return (\r\n                        <tr>\r\n                          <div style={{ display: 'flex' }}>\r\n                              <img src={folderThumbnail} style={{ height: '42px', width: '42px' }} alt=\"\"/>\r\n                            <Link to={`/folder${folder.path_display}`} style={{ border: '1px solid' }}>\r\n                                <td>{folder.name}</td>\r\n                            </Link>\r\n                          </div>\r\n                        </tr>\r\n                      )\r\n                    })} */}\r\n                </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <div className=\"sidebarRight\">\r\n            <ul>\r\n                <li> Link 1 </li>\r\n                <li> Link 1 </li>\r\n                <li> Link 1 </li>\r\n                <li> Link 1 </li>\r\n            </ul>\r\n            </div>\r\n          </main>\r\n        </div>\r\n    </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Main\r\n"]},"metadata":{},"sourceType":"module"}