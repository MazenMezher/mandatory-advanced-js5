{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Motar\\\\Desktop\\\\mandatory-advanced-js5\\\\src\\\\Components\\\\DropdownOptions.js\";\nimport React, { Component, PureComponent } from 'react';\nimport '../Css/Options.css';\nimport ClickedOutsideRemover from './ClickedOutsideRemover';\nimport DeleteWindow from './DeleteWindow';\nimport NewName from './NewName';\n\nclass DropdownOptions extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onDeleteButtonClicked = () => {\n      this.setState({\n        deleteButtonClicked: true\n      });\n    };\n\n    this.onCloseDeleteWindow = () => {\n      this.setState({\n        deleteButtonClicked: false\n      });\n    };\n\n    this.closeOnDelete = () => {\n      this.setState({\n        deleteButtonClicked: false\n      });\n    };\n\n    this.showRename = () => {\n      this.setState({\n        reNameButtonClicked: true\n      });\n    };\n\n    this.closeRenameFolder = () => {\n      this.props.renameFolders(this.props.path, this.props.id);\n      this.setState({\n        reNameButtonClicked: false\n      });\n    };\n\n    this.closeRenameFiles = () => {\n      this.props.renameFiles(this.props.path, this.props.id);\n      this.setState({\n        reNameButtonClicked: false\n      });\n    };\n\n    this.state = {\n      deleteButtonClicked: false,\n      reNameButtonClicked: false\n    };\n  } // Shows the window asking the user if they want to delete\n\n\n  render() {\n    const {\n      onDelete,\n      path,\n      name,\n      id,\n      renameFolders,\n      renameFiles,\n      tag,\n      updateFolderName,\n      updateFileName\n    } = this.props;\n    const {\n      deleteButtonClicked,\n      reNameButtonClicked\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"...\"), React.createElement(ClickedOutsideRemover, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dropdown-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dropdown-list\",\n      onClick: this.onDeleteButtonClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"delete\"), React.createElement(\"div\", {\n      className: \"dropdown-list\",\n      onClick: this.showRename,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"rename\"))), deleteButtonClicked ? React.createElement(DeleteWindow, {\n      onCloseDeleteWindow: this.onCloseDeleteWindow,\n      closeOnDelete: this.closeOnDelete,\n      tag: tag,\n      path: path,\n      onDelete: onDelete,\n      name: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }) : null, reNameButtonClicked ? React.createElement(NewName, {\n      rename: tag === 'folder' ? renameFolders : renameFiles,\n      update: tag === 'folder' ? updateFolderName : updateFileName,\n      closeRename: tag === 'folder' ? this.closeRenameFolder : this.closeRenameFiles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default DropdownOptions;","map":{"version":3,"sources":["C:/Users/Motar/Desktop/mandatory-advanced-js5/src/Components/DropdownOptions.js"],"names":["React","Component","PureComponent","ClickedOutsideRemover","DeleteWindow","NewName","DropdownOptions","constructor","props","onDeleteButtonClicked","setState","deleteButtonClicked","onCloseDeleteWindow","closeOnDelete","showRename","reNameButtonClicked","closeRenameFolder","renameFolders","path","id","closeRenameFiles","renameFiles","state","render","onDelete","name","tag","updateFolderName","updateFileName"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent } from 'react'\r\nimport '../Css/Options.css'\r\nimport ClickedOutsideRemover from './ClickedOutsideRemover'\r\nimport DeleteWindow from './DeleteWindow'\r\nimport NewName from './NewName'\r\n\r\nclass DropdownOptions extends PureComponent{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      deleteButtonClicked: false,\r\n      reNameButtonClicked: false,\r\n\r\n    }\r\n  }\r\n\r\n  // Shows the window asking the user if they want to delete\r\n  onDeleteButtonClicked = () =>{\r\n    this.setState({deleteButtonClicked: true})\r\n  }\r\n  // closes the delete window if you click avbryt or X\r\n  onCloseDeleteWindow = () =>{\r\n    this.setState({deleteButtonClicked: false})\r\n  }\r\n\r\n  closeOnDelete = () =>{\r\n    this.setState({deleteButtonClicked: false})\r\n  }\r\n  showRename = () =>{\r\n    this.setState({reNameButtonClicked: true})\r\n  }\r\n  closeRenameFolder = () =>{\r\n    this.props.renameFolders(this.props.path,this.props.id)\r\n    this.setState({reNameButtonClicked: false})\r\n  }\r\n  closeRenameFiles = () =>{\r\n    this.props.renameFiles(this.props.path,this.props.id)\r\n    this.setState({reNameButtonClicked: false})\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n  const{onDelete,path,name,id,renameFolders,renameFiles,tag,updateFolderName,updateFileName} = this.props\r\n  const{deleteButtonClicked,reNameButtonClicked} = this.state\r\n\r\n  return(\r\n  <>\r\n  <div className=\"dropdown\">\r\n  <span>...</span>\r\n  <ClickedOutsideRemover>\r\n    <div className=\"dropdown-content\">\r\n    <div className=\"dropdown-list\" onClick={this.onDeleteButtonClicked}>delete</div>\r\n    <div className=\"dropdown-list\" onClick={this.showRename}>rename</div>\r\n    </div>\r\n\r\n  </ClickedOutsideRemover>\r\n  {deleteButtonClicked ?\r\n  <DeleteWindow onCloseDeleteWindow={this.onCloseDeleteWindow} closeOnDelete={this.closeOnDelete} tag={tag} path={path} onDelete={onDelete} name={name}/>\r\n  : null}\r\n  {reNameButtonClicked ? <NewName\r\n     rename={tag === 'folder' ? renameFolders : renameFiles} update={tag === 'folder' ? updateFolderName : updateFileName}\r\n     closeRename={tag === 'folder' ? this.closeRenameFolder : this.closeRenameFiles}\r\n     />\r\n\r\n  : null}\r\n\r\n  </div>\r\n  </>\r\n\r\n)}}\r\n\r\n\r\n\r\nexport default DropdownOptions\r\n"]},"metadata":{},"sourceType":"module"}