{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Motar\\\\Desktop\\\\Online\\\\mandatory-advanced-js5\\\\src\\\\Components\\\\LogIn.js\";\nimport React, { Component } from 'react';\nimport { Dropbox } from \"dropbox\";\nimport { Redirect } from 'react-router-dom';\nimport LoginImg from '../Img/LoginAvatarImg.png';\nimport '../Css/Login.css'; // denna component låter oss logga in!\n\nclass LogIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.LogIn = () => {\n      let CLIENT_ID = 'ophwh7ganbw2c8b';\n      let dbx = new Dropbox({\n        clientId: CLIENT_ID\n      });\n      let LocalHost = 'https://wiggly-creator.surge.sh/auth';\n      let authUrl = dbx.getAuthenticationUrl(LocalHost);\n      this.setState({\n        LoginDropBox: authUrl\n      });\n    };\n\n    this.state = {\n      LoginDropBox: '',\n      accessToken: false,\n      tokenAvailable: false\n    };\n  }\n\n  componentDidMount() {\n    // hämtar token från localStorage\n    let token = localStorage.getItem('token');\n    console.log(token); // ifall token finns så vill vi uppdatera tokenAvailable så vi kan senare redirecta till /main\n\n    if (token) {\n      this.setState({\n        tokenAvailable: true\n      });\n      console.log('Token is available');\n    } else {\n      this.setState({\n        tokenAvailable: false\n      });\n      console.log('Token is unavailable');\n    }\n  } // Denna funktionen låter oss logga in\n\n\n  render() {\n    const {\n      LoginDropBox,\n      tokenAvailable\n    } = this.state;\n    if (tokenAvailable) return React.createElement(Redirect, {\n      to: \"/main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n    return (// <div>\n      //     <a onClick={this.LogIn} href={LoginDropBox}>Logga in</a>\n      // </div>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"base-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: LoginImg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"LoginButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"LoginBtn\",\n        onClick: this.LogIn,\n        href: LoginDropBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Login\")))))\n    );\n  }\n\n}\n\nexport default LogIn;","map":{"version":3,"sources":["C:/Users/Motar/Desktop/Online/mandatory-advanced-js5/src/Components/LogIn.js"],"names":["React","Component","Dropbox","Redirect","LoginImg","LogIn","constructor","props","CLIENT_ID","dbx","clientId","LocalHost","authUrl","getAuthenticationUrl","setState","LoginDropBox","state","accessToken","tokenAvailable","componentDidMount","token","localStorage","getItem","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAO,kBAAP,C,CAEA;;AACA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA2BnBF,KA3BmB,GA2BX,MAAM;AACV,UAAIG,SAAS,GAAG,iBAAhB;AAEA,UAAIC,GAAG,GAAG,IAAIP,OAAJ,CAAY;AAAEQ,QAAAA,QAAQ,EAAEF;AAAZ,OAAZ,CAAV;AACA,UAAIG,SAAS,GAAG,sCAAhB;AACA,UAAIC,OAAO,GAAGH,GAAG,CAACI,oBAAJ,CAAyBF,SAAzB,CAAd;AAEA,WAAKG,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEH;AAAhB,OAAd;AACH,KAnCkB;;AAGf,SAAKI,KAAL,GAAa;AACTD,MAAAA,YAAY,EAAE,EADL;AAETE,MAAAA,WAAW,EAAE,KAFJ;AAGTC,MAAAA,cAAc,EAAE;AAHP,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB;AACA,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAHgB,CAKhB;;AACA,QAAIA,KAAJ,EAAW;AACP,WAAKN,QAAL,CAAc;AAAEI,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,KAHD,MAIK;AACD,WAAKV,QAAL,CAAc;AAAEI,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;AACJ,GAzByB,CA2B1B;;;AAWAC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEV,MAAAA,YAAF;AAAgBG,MAAAA;AAAhB,QAAmC,KAAKF,KAA9C;AAEA,QAAIE,cAAJ,EAAoB,OAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEpB,WACI;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEd,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgC;AAAG,QAAA,SAAS,EAAC,UAAb;AAAwB,QAAA,OAAO,EAAE,KAAKC,KAAtC;AAA6C,QAAA,IAAI,EAAEU,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAhC,CAJJ,CADJ,CADJ;AAJJ;AAeH;;AA1DyB;;AA6D9B,eAAeV,KAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Dropbox } from \"dropbox\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport LoginImg from '../Img/LoginAvatarImg.png'\r\nimport '../Css/Login.css';\r\n\r\n// denna component låter oss logga in!\r\nclass LogIn extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            LoginDropBox: '',\r\n            accessToken: false,\r\n            tokenAvailable: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // hämtar token från localStorage\r\n        let token = localStorage.getItem('token');\r\n        console.log(token);\r\n\r\n        // ifall token finns så vill vi uppdatera tokenAvailable så vi kan senare redirecta till /main\r\n        if (token) {\r\n            this.setState({ tokenAvailable: true });\r\n            console.log('Token is available');\r\n        }\r\n        else {\r\n            this.setState({ tokenAvailable: false });\r\n            console.log('Token is unavailable');\r\n        }\r\n    }\r\n\r\n    // Denna funktionen låter oss logga in\r\n    LogIn = () => {\r\n        let CLIENT_ID = 'ophwh7ganbw2c8b';\r\n\r\n        let dbx = new Dropbox({ clientId: CLIENT_ID });\r\n        let LocalHost = 'https://wiggly-creator.surge.sh/auth';\r\n        let authUrl = dbx.getAuthenticationUrl(LocalHost);\r\n\r\n        this.setState({ LoginDropBox: authUrl});\r\n    }\r\n\r\n    render() {\r\n        const { LoginDropBox, tokenAvailable } = this.state;\r\n\r\n        if (tokenAvailable) return <Redirect to=\"/main\" />\r\n\r\n        return (\r\n            // <div>\r\n            //     <a onClick={this.LogIn} href={LoginDropBox}>Logga in</a>\r\n            // </div>\r\n            <div>\r\n                <div className = 'base-container'>\r\n                    <div className='container'>\r\n                        <div className='image'>\r\n                            <img src={LoginImg} />\r\n                        </div>\r\n                        <button className='LoginButton'><a className='LoginBtn' onClick={this.LogIn} href={LoginDropBox}>Login</a></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LogIn"]},"metadata":{},"sourceType":"module"}