{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Motar\\\\Desktop\\\\mandatory-advanced-js5\\\\src\\\\Components\\\\DropBoxFolder.js\";\nimport React, { Component } from 'react';\nimport { Dropbox } from \"dropbox\";\nimport LogOut from './LogOut';\nimport DropdownOptions from './DropdownOptions';\nimport CreateFolder from './CreateFolder';\nimport '../Css/icons.css';\nimport '../Css/mainFiles.css';\nimport '../Css/nav.css';\nimport '../Css/UlItems.css';\nimport folderImg from '../Img/folder-img.png';\nimport { Link, Redirect } from 'react-router-dom';\n\nclass DropBoxFolder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDelete = path_delete => {\n      const {\n        folders\n      } = this.state;\n      const dbx = new Dropbox({\n        accessToken: localStorage.getItem(\"token\")\n      });\n      dbx.filesDelete({\n        path: path_delete\n      }).then(response => {\n        let newFolder = folders.filter(folder => folder.name !== response.name);\n        this.setState({\n          folders: newFolder,\n          deleteButtonClicked: false\n        });\n      });\n    };\n\n    this.createFolder = name => {\n      let path = this.props.match.params.path;\n      this.dbx.filesCreateFolderV2({\n        path: `/${path}/${name}`,\n        autorename: true\n      }).then(response => {\n        console.log(response);\n        let folder = {};\n        folder[\".tag\"] = \"folder\";\n        let newFolder = { ...folder,\n          ...response.metadata\n        };\n        let allFolders = [...this.state.folders, newFolder];\n        this.setState({\n          folders: allFolders\n        });\n      }).catch(response => {\n        console.log(response);\n      });\n    };\n\n    this.onShowCreateFolder = () => {\n      this.setState({\n        showCreateFolder: true\n      });\n    };\n\n    this.onCloseCreateFolder = () => {\n      this.setState({\n        showCreateFolder: false\n      });\n    };\n\n    this.createFile = () => {\n      this.inputRef.current.click();\n    };\n\n    this.onChangeFile = () => {\n      let file = this.inputRef.current.files[0];\n\n      if (file) {\n        this.dbx.filesUpload({\n          contents: file,\n          path: `/${this.props.match.params.path}/${file.name}`,\n          autorename: true\n        }).then(response => {\n          console.log(response);\n          let file = {};\n          file[\".tag\"] = \"success\";\n          let createFile = {\n            file,\n            metadata: response\n          };\n          let uniteFiles = [...this.state.files, createFile];\n          this.setState({\n            uniteFiles\n          });\n        }).catch(response => {\n          console.log(response);\n        });\n      }\n    };\n\n    this.onGoBack = () => {\n      const {\n        links\n      } = this.state;\n      let newLink = links[links.length - 2];\n\n      if (newLink !== undefined) {\n        return `/main${newLink}`;\n      } else {\n        return `/main`;\n      }\n    };\n\n    this.downloadFile = file => {\n      this.dbx.filesGetThumbnail({\n        \"path\": file\n      }).then(res => {\n        console.log('HEJ 3', res);\n        let objURL = window.URL.createObjectURL(res.fileBlob);\n        this.setState({\n          URL: objURL\n        });\n      });\n    };\n\n    this.state = {\n      folders: [],\n      show: false,\n      files: [],\n      URL: null,\n      links: [],\n      showCreateFolder: false\n    };\n    this.inputRef = React.createRef();\n  } // delets files and closes delete window\n\n\n  componentDidMount() {\n    // hÃ¤mtar folders\n    let path = this.props.match.params.path;\n    console.log('path', path);\n    let links = path.split(\"/\");\n    console.log(links);\n    let newLinks = [];\n    links.reduce((acc, currentLink) => {\n      let a = acc + \"/\" + currentLink;\n      newLinks.push(acc + \"/\" + currentLink);\n      return acc + \"/\" + currentLink;\n    }, \"\");\n    console.log(newLinks);\n    this.dbx = new Dropbox({\n      accessToken: localStorage.getItem(\"token\")\n    });\n    this.dbx.filesListFolder({\n      path: `/${path}`\n    }).then(res => {\n      this.setState({\n        folders: res.entries,\n        links: newLinks\n      });\n      const entries = res.entries.filter(x => x[\".tag\"] === \"file\").map(x => ({\n        path: x.path_display\n      }));\n      return this.dbx.filesGetThumbnailBatch({\n        entries: entries\n      });\n    }).then(res => {\n      this.setState({\n        files: res.entries\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let path = this.props.match.params.path;\n    let links = path.split(\"/\");\n    let newLinks = [];\n    links.reduce((acc, currentLink) => {\n      let a = acc + \"/\" + currentLink;\n      newLinks.push(acc + \"/\" + currentLink);\n      return acc + \"/\" + currentLink;\n    }, \"\");\n\n    if (prevState.folders === this.state.folders && prevState.files === this.state.files) {\n      this.dbx = new Dropbox({\n        accessToken: localStorage.getItem(\"token\")\n      });\n      this.dbx.filesListFolder({\n        path: `/${path}`\n      }).then(res => {\n        this.setState({\n          folders: res.entries,\n          links: newLinks\n        });\n        const entries = res.entries.filter(x => x[\".tag\"] === \"file\").map(x => ({\n          path: x.path_display\n        }));\n        return this.dbx.filesGetThumbnailBatch({\n          entries\n        });\n      }).then(res => {\n        this.setState({\n          files: res.entries\n        });\n      });\n    }\n  }\n\n  render() {\n    const {\n      folders,\n      files,\n      URL,\n      links,\n      showCreateFolder\n    } = this.state;\n    let minaFiler = files.map(file => {\n      let image = `data:image/jpeg;base64,${file.thumbnail}`;\n      let fileName;\n      let date_input;\n      let datum;\n      let size;\n      let i;\n      let newSize;\n\n      if (file[\".tag\"] === \"failure\") {\n        return null;\n      } else {\n        fileName = file.metadata.name;\n        date_input = new Date(file.metadata.client_modified);\n        datum = new Date(date_input).toDateString();\n        size = file.metadata.size;\n        i = Math.floor(Math.log(size) / Math.log(1024));\n        newSize = (size / Math.pow(1024, i)).toFixed(2) * 1 + \"\" + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n      }\n\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: image,\n        style: {\n          height: '42px',\n          width: '42px'\n        },\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        onClick: () => this.downloadFile(file.metadata.path_display),\n        href: URL,\n        download: fileName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, fileName), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \" \", \" Latest change: \" + datum, \" \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \" \", \" Filesize: \" + newSize, \" \"))));\n    });\n    let minaFolders = folders.map(folder => {\n      // render img icons to folders !\n      const type = folder['.tag'];\n      let folderThumbnail;\n\n      if (type === 'folder') {\n        folderThumbnail = folderImg;\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: folderThumbnail,\n          style: {\n            height: '42px',\n            width: '42px'\n          },\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }), React.createElement(Link, {\n          to: `/main${folder.path_display}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, folder.name), React.createElement(\"td\", {\n          className: \"dropdownList\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(DropdownOptions, {\n          onDelete: this.onDelete,\n          path: folder.path_display,\n          name: folder.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        })))));\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sideLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Logo\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \" Start \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \" Filter \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \" Paper \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \" Transfer \"))), React.createElement(\"div\", {\n      className: \"bigBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Project X\"), React.createElement(\"input\", {\n      placeholder: \"Search\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(LogOut, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), links.map(link => {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(Link, {\n        style: {\n          color: 'white'\n        },\n        to: `/main${link}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, link));\n    })), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"Folder/file name\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Folders!\"), minaFolders, React.createElement(\"h2\", {\n      style: {\n        marginTop: '10%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Files!\"), minaFiler))), React.createElement(\"div\", {\n      className: \"sidebarRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \" New Map \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      onClick: this.createFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Upload File\", React.createElement(\"input\", {\n      onChange: this.onChangeFile,\n      type: \"file\",\n      hidden: \"hidden\",\n      ref: this.inputRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \" Upload Map \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      onClick: this.onShowCreateFolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Create Folder\"), showCreateFolder === true ? React.createElement(CreateFolder, {\n      showCreateFolder: showCreateFolder,\n      createFolder: this.createFolder,\n      onCloseCreateFolder: this.onCloseCreateFolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }) : null, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \" New Shared Map \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: this.onGoBack,\n      onClick: this.onGoBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \" Go Back \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"sideText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, \"Choose your option\")))));\n  }\n\n}\n\nexport default DropBoxFolder;","map":{"version":3,"sources":["C:/Users/Motar/Desktop/mandatory-advanced-js5/src/Components/DropBoxFolder.js"],"names":["React","Component","Dropbox","LogOut","DropdownOptions","CreateFolder","folderImg","Link","Redirect","DropBoxFolder","constructor","props","onDelete","path_delete","folders","state","dbx","accessToken","localStorage","getItem","filesDelete","path","then","response","newFolder","filter","folder","name","setState","deleteButtonClicked","createFolder","match","params","filesCreateFolderV2","autorename","console","log","metadata","allFolders","catch","onShowCreateFolder","showCreateFolder","onCloseCreateFolder","createFile","inputRef","current","click","onChangeFile","file","files","filesUpload","contents","uniteFiles","onGoBack","links","newLink","length","undefined","downloadFile","filesGetThumbnail","res","objURL","window","URL","createObjectURL","fileBlob","show","createRef","componentDidMount","split","newLinks","reduce","acc","currentLink","a","push","filesListFolder","entries","x","map","path_display","filesGetThumbnailBatch","componentDidUpdate","prevProps","prevState","render","minaFiler","image","thumbnail","fileName","date_input","datum","size","i","newSize","Date","client_modified","toDateString","Math","floor","pow","toFixed","display","height","width","minaFolders","type","folderThumbnail","link","color","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { Dropbox } from \"dropbox\";\r\nimport LogOut from './LogOut'\r\nimport DropdownOptions from './DropdownOptions'\r\nimport CreateFolder from './CreateFolder'\r\n\r\n\r\nimport '../Css/icons.css'\r\nimport '../Css/mainFiles.css'\r\nimport '../Css/nav.css'\r\nimport '../Css/UlItems.css'\r\n\r\nimport folderImg from '../Img/folder-img.png';\r\nimport { Link,Redirect } from 'react-router-dom';\r\n\r\nclass DropBoxFolder extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n          folders: [],\r\n          show: false,\r\n          files: [],\r\n          URL: null,\r\n          links: [],\r\n          showCreateFolder: false,\r\n        }\r\n  \r\n        this.inputRef = React.createRef()\r\n        }\r\n\r\n    \r\n    // delets files and closes delete window\r\n    onDelete = (path_delete) =>{\r\n      const{folders} = this.state\r\n      const dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\r\n      dbx.filesDelete({path: path_delete})\r\n      .then(response =>{\r\n        let newFolder = folders.filter( folder => folder.name !== response.name)\r\n        this.setState({folders: newFolder, deleteButtonClicked : false})\r\n      })\r\n    }\r\n\r\n\r\n    createFolder = (name) =>{\r\n      let path = this.props.match.params.path\r\n      this.dbx.filesCreateFolderV2({path: `/${path}/${name}`, autorename:true })\r\n      .then(response =>{\r\n        console.log(response)\r\n        let folder = {}\r\n        folder[\".tag\"] = \"folder\"\r\n        let newFolder = {...folder,...response.metadata}\r\n        let allFolders = [...this.state.folders, newFolder]\r\n        this.setState({folders: allFolders})\r\n      }).catch(response=>{\r\n        console.log(response)\r\n      })\r\n    }\r\n    //shows the window when click on create folder\r\n    onShowCreateFolder= () =>{\r\n      this.setState({showCreateFolder: true})\r\n    }\r\n    //closes the window when click on create folder\r\n    onCloseCreateFolder = () =>{\r\n      this.setState({showCreateFolder: false})\r\n    }\r\n\r\n    createFile = () =>{\r\n      this.inputRef.current.click();\r\n    }\r\n    onChangeFile = () =>{\r\n      let file = this.inputRef.current.files[0]\r\n      if(file){\r\n        this.dbx.filesUpload({contents:file, path:`/${this.props.match.params.path}/${file.name}`, autorename: true})\r\n        .then(response=>{\r\n          console.log(response)\r\n          let file = {}\r\n          file[\".tag\"] = \"success\"\r\n          let createFile = {file,metadata: response}\r\n          let uniteFiles = [...this.state.files, createFile]\r\n          this.setState({uniteFiles})\r\n        }).catch(response=>{\r\n          console.log(response)\r\n        })\r\n      }\r\n    }\r\n\r\n    onGoBack = () =>{\r\n      const{links} = this.state\r\n      let newLink = links[links.length-2]\r\n      if(newLink !== undefined){\r\n\r\n      return `/main${newLink}`\r\n    }else{\r\n      return `/main`\r\n    }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n      // hÃ¤mtar folders\r\n      let path = this.props.match.params.path\r\n      console.log('path', path)\r\n      let links = path.split(\"/\")\r\n      console.log(links)\r\n      let newLinks = []\r\n      links.reduce(((acc,currentLink)=>{\r\n        let a = acc+\"/\"+currentLink\r\n        newLinks.push(acc+\"/\"+currentLink)\r\n        return acc+\"/\"+currentLink\r\n      }),\"\")\r\n      console.log(newLinks)\r\n\r\n      this.dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\r\n      this.dbx.filesListFolder({ path: `/${path}` })\r\n        .then((res) => {\r\n\r\n          this.setState({ folders: res.entries,links: newLinks });\r\n\r\n        const entries = res.entries\r\n          .filter(x => x[\".tag\"] === \"file\")\r\n          .map((x) => ({ path: x.path_display }));\r\n        return this.dbx.filesGetThumbnailBatch({\r\n          entries: entries,\r\n        });\r\n        })\r\n        .then((res) => {\r\n          this.setState({ files: res.entries });\r\n        });\r\n    }\r\n  \r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      let path = this.props.match.params.path\r\n      let links = path.split(\"/\")\r\n\r\n      let newLinks = []\r\n      links.reduce(((acc,currentLink)=>{\r\n        let a = acc+\"/\"+currentLink\r\n        newLinks.push(acc+\"/\"+currentLink)\r\n        return acc+\"/\"+currentLink\r\n      }),\"\")\r\n\r\n      if (prevState.folders === this.state.folders && prevState.files === this.state.files) {\r\n      this.dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\r\n\r\n      this.dbx.filesListFolder({ path: `/${path}` })\r\n      .then((res) => {\r\n        this.setState({ folders: res.entries, links: newLinks })\r\n        const entries = res.entries\r\n        .filter(x => x[\".tag\"] === \"file\")\r\n        .map((x) => ({ path: x.path_display }));\r\n      return this.dbx.filesGetThumbnailBatch({ entries });\r\n      })\r\n      .then((res) => {\r\n        this.setState({ files: res.entries });\r\n      });\r\n  }\r\n  }\r\n\r\n  downloadFile = (file) => {\r\n    this.dbx.filesGetThumbnail({\"path\": file})\r\n      .then(res => {\r\n        console.log('HEJ 3', res);\r\n        let objURL = window.URL.createObjectURL(res.fileBlob);\r\n        this.setState({ URL: objURL });\r\n      });\r\n  }\r\n\r\n    render() {\r\n\r\n      const { folders, files, URL,links, showCreateFolder } = this.state;\r\n\r\n\r\n      let minaFiler = files.map(file => {\r\n\r\n        let image = `data:image/jpeg;base64,${file.thumbnail}`;\r\n        let fileName\r\n        let date_input\r\n        let datum\r\n        let size\r\n        let i\r\n        let newSize\r\n\r\n\r\n        if(file[\".tag\"] === \"failure\"){\r\n          return null\r\n        }\r\n        else {\r\n          fileName = file.metadata.name;\r\n          date_input = new Date((file.metadata.client_modified));\r\n          datum = new Date(date_input).toDateString();\r\n\r\n\r\n\r\n          size = file.metadata.size;\r\n          i = Math.floor(Math.log(size) / Math.log(1024));\r\n          newSize = (size / Math.pow(1024, i)).toFixed(2) * 1 + \"\"+['B', 'kB', 'MB', 'GB', 'TB'][i]\r\n\r\n        }\r\n        return (\r\n          <tr>\r\n            <td>\r\n            <div style={{ display: 'flex' }}>\r\n              <img src={image} style={{ height: '42px', width: '42px' }} alt=\"\"/>\r\n              <a onClick={() => this.downloadFile(file.metadata.path_display)} href={URL} download={fileName}>{fileName}</a>\r\n              <span> {\" Latest change: \" + datum} </span>\r\n              <span> {\" Filesize: \" + newSize} </span>\r\n\r\n            </div>\r\n            </td>\r\n          </tr>\r\n        )\r\n      })\r\n\r\n      let minaFolders = folders.map(folder => {\r\n        // render img icons to folders !\r\n\r\n        const type = folder['.tag'];\r\n        let folderThumbnail\r\n\r\n        if (type === 'folder') {\r\n          folderThumbnail = folderImg;\r\n        return (\r\n          <tr>\r\n            <td>\r\n            <div style={{ display: 'flex' }}>\r\n            <img src={folderThumbnail} style={{ height: '42px', width: '42px' }} alt=\"\"/>\r\n                <Link to={`/main${folder.path_display}`}>\r\n                  {folder.name}\r\n                </Link>\r\n\r\n                <td className=\"dropdownList\">\r\n                <DropdownOptions\r\n                  onDelete={this.onDelete}\r\n                  path={folder.path_display}\r\n                  name={folder.name}\r\n                  />\r\n                  </td>\r\n            </div>\r\n            </td>\r\n          </tr>\r\n        )\r\n      }\r\n      })\r\n\r\n\r\n        return (\r\n          <div className=\"App\" >\r\n        <div className=\"sideLeft\">\r\n          <div className=\"Logo\">\r\n            Logo\r\n          </div>\r\n          <ul>\r\n            <li> Start </li>\r\n            <br/>\r\n            <li> Filter </li>\r\n            <br/>\r\n            <li> Paper </li>\r\n            <br/>\r\n            <li> Transfer </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className={\"bigBox\"}>\r\n          <header>\r\n            <h1>Project X</h1>\r\n              <input placeholder=\"Search\" type=\"text\" />\r\n              <LogOut />\r\n\r\n              {links.map(link => {\r\n\r\n                return (<span><Link style={{color:'white'}} to={`/main${link}`}>{link}</Link></span>)\r\n              })}\r\n\r\n          </header>\r\n\r\n          <main>\r\n\r\n          <div className=\"files\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Folder/file name</th>\r\n                      </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n                  <h2>Folders!</h2>\r\n                    {minaFolders}\r\n\r\n                  <h2 style={{ marginTop: '10%' }}>Files!</h2>\r\n                    {minaFiler}\r\n\r\n                </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <div className=\"sidebarRight\">\r\n            <ul>\r\n\r\n                <li> New Map </li>\r\n                  <br/>\r\n                <li onClick={this.createFile}>\r\n                Upload File\r\n                <input onChange={this.onChangeFile} type=\"file\" hidden=\"hidden\" ref={this.inputRef}/> </li>\r\n                <br />\r\n                <li> Upload Map </li>\r\n                <br />\r\n                <li onClick={this.onShowCreateFolder}>\r\n                Create Folder\r\n                </li>\r\n                {showCreateFolder === true ?\r\n                <CreateFolder showCreateFolder={showCreateFolder} createFolder={this.createFolder} onCloseCreateFolder={this.onCloseCreateFolder}/>\r\n                : null}\r\n\r\n                <br />\r\n                <li> New Shared Map </li>\r\n                <br />\r\n                <Link to={this.onGoBack} onClick={this.onGoBack}> Go Back </Link>\r\n                <br />\r\n\r\n\r\n            </ul>\r\n            <p className=\"sideText\">Choose your option</p>\r\n            </div>\r\n          </main>\r\n        </div>\r\n    </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default DropBoxFolder\r\n"]},"metadata":{},"sourceType":"module"}