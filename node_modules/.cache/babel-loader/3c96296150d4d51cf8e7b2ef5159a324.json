{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Motar\\\\Desktop\\\\mandatory-advanced-js5\\\\src\\\\Components\\\\DropdownOptions.js\";\nimport React, { Component, PureComponent } from 'react';\nimport '../Css/Options.css';\nimport ClickedOutsideRemover from './ClickedOutsideRemover';\nimport DeleteWindow from './DeleteWindow';\n\nclass DropdownOptions extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onDelete = path_delete => {\n      const {\n        folders\n      } = this.state;\n      this.dbx.filesDelete({\n        path: path_delete\n      }).then(response => {\n        let newFolder = folders.filter(folder => folder.name !== response.name);\n        this.setState({\n          folders: newFolder\n        });\n      });\n    };\n\n    this.createFolder = name => {\n      this.dbx.filesCreateFolderV2({\n        path: `/${name}`,\n        autorename: true\n      }).then(response => {\n        let folder = {};\n        folder[\".tag\"] = \"folder\";\n        let newFolder = { ...folder,\n          ...response.metadata\n        };\n        let allFolders = [...this.state.folders, newFolder];\n        this.setState({\n          folders: allFolders\n        });\n      }).catch(response => {\n        console.log(response);\n      });\n    };\n\n    this.onShowCreateFolder = () => {\n      this.setState({\n        showCreateFolder: true\n      });\n    };\n\n    this.onCloseCreateFolder = () => {\n      this.setState({\n        showCreateFolder: false\n      });\n    };\n\n    this.onUpdateName = e => {\n      this.setState({\n        folders: e.target.value\n      });\n    };\n\n    this.onDelete = path_delete => {\n      const {\n        folders\n      } = this.state;\n      const dbx = new Dropbox({\n        accessToken: localStorage.getItem(\"token\")\n      });\n      dbx.filesDelete({\n        path: path_delete\n      }).then(response => {\n        let newFolder = folders.filter(folder => folder.name !== response.name);\n        this.setState({\n          folders: newFolder\n        });\n      });\n    };\n\n    this.createFile = () => {\n      this.inputRef.current.click();\n    };\n\n    this.onChangeFile = () => {\n      let file = this.inputRef.current.files[0];\n\n      if (file) {\n        this.dbx.filesUpload({\n          contents: file,\n          path: `/${file.name}`,\n          autorename: true\n        }).then(response => {\n          console.log(response);\n          let file = {};\n          file[\".tag\"] = \"success\";\n          let createFile = {\n            file,\n            metadata: response\n          };\n          let uniteFiles = [...this.state.files, createFile];\n          this.setState({\n            uniteFiles\n          });\n        }).catch(response => {\n          console.log(response);\n        });\n      }\n    };\n\n    this.onDeleteButtonClicked = () => {\n      this.setState({\n        deleteButtonClicked: true\n      });\n    };\n\n    this.onCloseDeleteWindow = () => {\n      this.setState({\n        deleteButtonClicked: false\n      });\n    };\n\n    this.closeOnDelete = () => {\n      this.setState({\n        deleteButtonClicked: false\n      });\n    };\n\n    this.state = {\n      deleteButtonClicked: false\n    };\n  }\n\n  render() {\n    const {\n      onDelete,\n      path,\n      name\n    } = this.props;\n    const {\n      deleteButtonClicked\n    } = this.state;\n    console.log(deleteButtonClicked);\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"...\"), React.createElement(ClickedOutsideRemover, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dropdown-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dropdown-list\",\n      onClick: this.onDeleteButtonClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"delete\"), React.createElement(\"div\", {\n      className: \"dropdown-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"ladda upp\"))), deleteButtonClicked ? React.createElement(DeleteWindow, {\n      onCloseDeleteWindow: this.onCloseDeleteWindow,\n      path: path,\n      onDelete: onDelete,\n      name: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default DropdownOptions;","map":{"version":3,"sources":["C:/Users/Motar/Desktop/mandatory-advanced-js5/src/Components/DropdownOptions.js"],"names":["React","Component","PureComponent","ClickedOutsideRemover","DeleteWindow","DropdownOptions","constructor","props","onDelete","path_delete","folders","state","dbx","filesDelete","path","then","response","newFolder","filter","folder","name","setState","createFolder","filesCreateFolderV2","autorename","metadata","allFolders","catch","console","log","onShowCreateFolder","showCreateFolder","onCloseCreateFolder","onUpdateName","e","target","value","Dropbox","accessToken","localStorage","getItem","createFile","inputRef","current","click","onChangeFile","file","files","filesUpload","contents","uniteFiles","onDeleteButtonClicked","deleteButtonClicked","onCloseDeleteWindow","closeOnDelete","render"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent } from 'react'\r\nimport '../Css/Options.css'\r\nimport ClickedOutsideRemover from './ClickedOutsideRemover'\r\nimport DeleteWindow from './DeleteWindow'\r\n\r\nclass DropdownOptions extends PureComponent{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      deleteButtonClicked: false\r\n\r\n    }\r\n  }\r\n  onDelete = (path_delete) =>{\r\n    const{folders} = this.state\r\n    this.dbx.filesDelete({path: path_delete})\r\n    .then(response =>{\r\n      let newFolder = folders.filter( folder => folder.name !== response.name)\r\n      this.setState({folders: newFolder})\r\n    })\r\n  }\r\n\r\n  //Create Folder\r\n  createFolder = (name) =>{\r\n    this.dbx.filesCreateFolderV2({path: `/${name}`, autorename:true })\r\n    .then(response =>{\r\n      let folder = {}\r\n      folder[\".tag\"] = \"folder\"\r\n      let newFolder = {...folder,...response.metadata}\r\n      let allFolders = [...this.state.folders, newFolder]\r\n      this.setState({folders: allFolders})\r\n    }).catch(response=>{\r\n      console.log(response)\r\n    })\r\n  }\r\n  //shows the window when click on create folder\r\n  onShowCreateFolder= () =>{\r\n    this.setState({showCreateFolder: true})\r\n    \r\n  }\r\n  //closes the window when click on create folder\r\n  onCloseCreateFolder = () =>{\r\n    this.setState({showCreateFolder: false})\r\n  }\r\n\r\n  onUpdateName = (e) => {\r\n    this.setState({folders: e.target.value})\r\n  }\r\n\r\n \r\n  // delets files and closes delete window\r\n  onDelete = (path_delete) =>{\r\n    const{folders} = this.state\r\n    const dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\r\n    dbx.filesDelete({path: path_delete})\r\n    .then(response =>{\r\n      let newFolder = folders.filter( folder => folder.name !== response.name)\r\n      this.setState({folders: newFolder })\r\n    })\r\n  }\r\n  createFile = () =>{\r\n    this.inputRef.current.click();\r\n    \r\n  }\r\n  onChangeFile = () =>{\r\n    let file = this.inputRef.current.files[0]\r\n    if(file){\r\n      this.dbx.filesUpload({contents:file, path:`/${file.name}`, autorename: true})\r\n      .then(response=>{\r\n        console.log(response)\r\n        let file = {}\r\n        file[\".tag\"] = \"success\"\r\n        let createFile = {file,metadata: response}\r\n        let uniteFiles = [...this.state.files, createFile]\r\n        this.setState({uniteFiles})\r\n      }).catch(response=>{\r\n        console.log(response)\r\n      })\r\n    }\r\n  }\r\n\r\n  // Shows the window asking the user if they want to delete\r\n  onDeleteButtonClicked = () =>{\r\n    this.setState({deleteButtonClicked: true})\r\n  }\r\n  // closes the delete window if you click avbryt or X\r\n  onCloseDeleteWindow = () =>{\r\n    this.setState({deleteButtonClicked: false})\r\n  }\r\n\r\n  closeOnDelete = () =>{\r\n    this.setState({deleteButtonClicked: false})\r\n  }\r\n\r\n  render(){\r\n  const{onDelete,path,name} = this.props\r\n  const{deleteButtonClicked} = this.state\r\n\r\n  console.log(deleteButtonClicked)\r\n  return(\r\n  <>\r\n  <div className=\"dropdown\">\r\n  <span>...</span>\r\n  <ClickedOutsideRemover>\r\n    <div className=\"dropdown-content\">\r\n    <div className=\"dropdown-list\" onClick={this.onDeleteButtonClicked}>delete</div>\r\n    <div className=\"dropdown-list\">ladda upp</div>\r\n    </div>\r\n\r\n  </ClickedOutsideRemover>\r\n  {deleteButtonClicked ?\r\n  <DeleteWindow onCloseDeleteWindow={this.onCloseDeleteWindow} path={path} onDelete={onDelete} name={name}/>\r\n  : null}\r\n  </div>\r\n  </>\r\n\r\n)}}\r\n\r\n\r\n\r\nexport default DropdownOptions\r\n"]},"metadata":{},"sourceType":"module"}