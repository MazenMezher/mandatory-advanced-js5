{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Motar\\\\Desktop\\\\Online\\\\mandatory-advanced-js5\\\\src\\\\Components\\\\DropdownOptions.js\";\nimport React, { PureComponent } from 'react';\nimport ClickedOutsideRemover from './ClickedOutsideRemover';\nimport DeleteWindow from './DeleteWindow';\nimport NewName from './NewName';\nimport CopyWindow from './CopyWindow';\nimport MoveWindow from './MoveWindow';\nimport '../Css/Options.css'; // Denna component gör så att när jag klickar på sakerna som finns inne i de tre punkterna så kommer fram några options!\n// Klickar man på en av dessa options så ändras boolean som finns i this.state till true och då skickar vi props till de andra komponenter!\n\nclass DropdownOptions extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onDeleteButtonClicked = () => {\n      this.setState({\n        deleteButtonClicked: true\n      });\n    };\n\n    this.onCloseDeleteWindow = () => {\n      this.setState({\n        deleteButtonClicked: false\n      });\n    };\n\n    this.closeOnDelete = () => {\n      this.setState({\n        deleteButtonClicked: false\n      });\n    };\n\n    this.showRename = () => {\n      this.setState({\n        reNameButtonClicked: true\n      });\n    };\n\n    this.closeRenameFolder = () => {\n      this.props.renameFolders(this.props.path, this.props.id);\n      this.setState({\n        reNameButtonClicked: false\n      });\n    };\n\n    this.closeRenameFiles = () => {\n      this.props.renameFiles(this.props.path, this.props.id);\n      this.setState({\n        reNameButtonClicked: false\n      });\n    };\n\n    this.hideRename = () => {\n      this.setState({\n        reNameButtonClicked: false\n      });\n    };\n\n    this.openCopyWindow = () => {\n      this.setState({\n        copyButtonClicked: true\n      });\n    };\n\n    this.makeCopyInSameFolder = () => {\n      this.props.copy(this.props.path_display);\n    };\n\n    this.closeCopyWindow = () => {\n      this.setState({\n        copyButtonClicked: false\n      });\n    };\n\n    this.openMoveWindow = () => {\n      this.setState({\n        moveButtonClicked: true\n      });\n    };\n\n    this.closeMoveWindow = () => {\n      this.setState({\n        moveButtonClicked: false\n      });\n    };\n\n    this.state = {\n      deleteButtonClicked: false,\n      reNameButtonClicked: false,\n      copyButtonClicked: false,\n      moveButtonClicked: false\n    };\n  } // Visar fönstret som frågar ifall användaren vill ta bort\n\n\n  render() {\n    const {\n      onDelete,\n      path,\n      name,\n      id,\n      renameFolders,\n      renameFiles,\n      tag,\n      updateFolderName,\n      updateFileName,\n      copy,\n      path_display\n    } = this.props;\n    const {\n      deleteButtonClicked,\n      reNameButtonClicked,\n      copyButtonClicked,\n      moveButtonClicked\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"...\"), React.createElement(ClickedOutsideRemover, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dropdown-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dropdown-list\",\n      onClick: this.onDeleteButtonClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"delete\"), React.createElement(\"div\", {\n      className: \"dropdown-list\",\n      onClick: this.showRename,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"rename\"), React.createElement(\"div\", {\n      className: \"dropdown-list\",\n      onClick: this.openCopyWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"copy\"), React.createElement(\"div\", {\n      className: \"dropdown-list\",\n      onClick: this.openMoveWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"move\"))), deleteButtonClicked ? React.createElement(DeleteWindow, {\n      onCloseDeleteWindow: this.onCloseDeleteWindow,\n      closeOnDelete: this.closeOnDelete,\n      tag: tag,\n      path: path,\n      onDelete: onDelete,\n      name: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }) : null, reNameButtonClicked ? React.createElement(NewName, {\n      rename: tag === 'folder' ? renameFolders : renameFiles,\n      update: tag === 'folder' ? updateFolderName : updateFileName,\n      closeRename: tag === 'folder' ? this.closeRenameFolder : this.closeRenameFiles,\n      hideRename: this.hideRename,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }) : null, copyButtonClicked ? React.createElement(CopyWindow, {\n      closeCopyWindow: this.closeCopyWindow,\n      makeCopyInSameFolder: this.makeCopyInSameFolder,\n      copy: copy,\n      path_display: path_display,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }) : null, moveButtonClicked ? React.createElement(MoveWindow, {\n      closeMoveWindow: this.closeMoveWindow,\n      path_display: path_display,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default DropdownOptions;","map":{"version":3,"sources":["C:/Users/Motar/Desktop/Online/mandatory-advanced-js5/src/Components/DropdownOptions.js"],"names":["React","PureComponent","ClickedOutsideRemover","DeleteWindow","NewName","CopyWindow","MoveWindow","DropdownOptions","constructor","props","onDeleteButtonClicked","setState","deleteButtonClicked","onCloseDeleteWindow","closeOnDelete","showRename","reNameButtonClicked","closeRenameFolder","renameFolders","path","id","closeRenameFiles","renameFiles","hideRename","openCopyWindow","copyButtonClicked","makeCopyInSameFolder","copy","path_display","closeCopyWindow","openMoveWindow","moveButtonClicked","closeMoveWindow","state","render","onDelete","name","tag","updateFolderName","updateFileName"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport ClickedOutsideRemover from './ClickedOutsideRemover'\r\nimport DeleteWindow from './DeleteWindow'\r\nimport NewName from './NewName'\r\nimport CopyWindow from './CopyWindow'\r\nimport MoveWindow from './MoveWindow'\r\n\r\nimport '../Css/Options.css'\r\n\r\n// Denna component gör så att när jag klickar på sakerna som finns inne i de tre punkterna så kommer fram några options!\r\n// Klickar man på en av dessa options så ändras boolean som finns i this.state till true och då skickar vi props till de andra komponenter!\r\n\r\nclass DropdownOptions extends PureComponent{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      deleteButtonClicked: false,\r\n      reNameButtonClicked: false,\r\n      copyButtonClicked:false,\r\n      moveButtonClicked:false,\r\n    }\r\n  }\r\n\r\n  // Visar fönstret som frågar ifall användaren vill ta bort\r\n  onDeleteButtonClicked = () =>{\r\n    this.setState({deleteButtonClicked: true})\r\n  }\r\n\r\n  // Stänger delete fönstret om användaren klickar på avbryt\r\n  onCloseDeleteWindow = () =>{\r\n    this.setState({deleteButtonClicked: false})\r\n  }\r\n\r\n  closeOnDelete = () =>{\r\n    this.setState({deleteButtonClicked: false})\r\n  }\r\n\r\n  showRename = () =>{\r\n    this.setState({reNameButtonClicked: true})\r\n  }\r\n\r\n  closeRenameFolder = () =>{\r\n    this.props.renameFolders(this.props.path,this.props.id)\r\n    this.setState({reNameButtonClicked: false})\r\n  }\r\n\r\n  closeRenameFiles = () =>{\r\n    this.props.renameFiles(this.props.path,this.props.id)\r\n    this.setState({reNameButtonClicked: false})\r\n  }\r\n\r\n  hideRename = () =>{\r\n    this.setState({reNameButtonClicked: false})\r\n  }\r\n\r\n  openCopyWindow = () =>{\r\n    this.setState({copyButtonClicked: true})\r\n  }\r\n\r\n  makeCopyInSameFolder = () =>{\r\n    this.props.copy(this.props.path_display)\r\n  }\r\n\r\n  closeCopyWindow = () =>{\r\n    this.setState({copyButtonClicked:false})\r\n  }\r\n\r\n  openMoveWindow = () =>{\r\n    this.setState({moveButtonClicked: true})\r\n  }\r\n\r\n  closeMoveWindow = () =>{\r\n    this.setState({moveButtonClicked: false})\r\n  }\r\n\r\n  render(){\r\n  const{ onDelete, path, name, id, renameFolders, renameFiles, tag, updateFolderName, updateFileName, copy, path_display } = this.props\r\n  const{ deleteButtonClicked, reNameButtonClicked, copyButtonClicked, moveButtonClicked } = this.state\r\n\r\n  return(\r\n  <>\r\n    <div className=\"dropdown\">\r\n    <span>...</span>\r\n    <ClickedOutsideRemover>\r\n      <div className=\"dropdown-content\">\r\n      <div className=\"dropdown-list\" onClick={this.onDeleteButtonClicked}>delete</div>\r\n      <div className=\"dropdown-list\" onClick={this.showRename}>rename</div>\r\n      <div className=\"dropdown-list\" onClick={this.openCopyWindow}>copy</div>\r\n      <div className=\"dropdown-list\" onClick={this.openMoveWindow}>move</div>\r\n      </div>\r\n\r\n    </ClickedOutsideRemover>\r\n    {deleteButtonClicked ?\r\n    <DeleteWindow onCloseDeleteWindow={this.onCloseDeleteWindow} closeOnDelete={this.closeOnDelete} tag={tag} path={path} onDelete={onDelete} name={name}/>\r\n    : null}\r\n    {reNameButtonClicked ? <NewName\r\n      rename={tag === 'folder' ? renameFolders : renameFiles} update={tag === 'folder' ? updateFolderName : updateFileName}\r\n      closeRename={tag === 'folder' ? this.closeRenameFolder : this.closeRenameFiles}\r\n      hideRename = {this.hideRename}\r\n      />\r\n\r\n    : null}\r\n    {copyButtonClicked ?\r\n      <CopyWindow closeCopyWindow={this.closeCopyWindow} makeCopyInSameFolder={this.makeCopyInSameFolder} copy={copy} path_display={path_display}/>\r\n      : null}\r\n    {moveButtonClicked ? <MoveWindow closeMoveWindow={this.closeMoveWindow} path_display={path_display}/>:null}\r\n    </div>\r\n  </>\r\n)}}\r\n\r\nexport default DropdownOptions"]},"metadata":{},"sourceType":"module"}