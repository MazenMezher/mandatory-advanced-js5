{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\TG\\\\Desktop\\\\mandatory-advanced-js5\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\TG\\\\Desktop\\\\mandatory-advanced-js5\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\TG\\\\Desktop\\\\mandatory-advanced-js5\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\TG\\\\Desktop\\\\mandatory-advanced-js5\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\TG\\\\Desktop\\\\mandatory-advanced-js5\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Dropbox}from\"dropbox\";import{Redirect}from'react-router-dom';// denna component låter oss logga in!\nvar LogIn=/*#__PURE__*/function(_Component){_inherits(LogIn,_Component);function LogIn(props){var _this;_classCallCheck(this,LogIn);_this=_possibleConstructorReturn(this,_getPrototypeOf(LogIn).call(this,props));_this.LogIn=function(){var CLIENT_ID='1rw2bkl9h8tl2yb';var dbx=new Dropbox({clientId:CLIENT_ID});var LocalHost='http://localhost:3000/auth';var authUrl=dbx.getAuthenticationUrl(LocalHost);_this.setState({LoginDropBox:authUrl});};_this.state={LoginDropBox:'',accessToken:false,tokenAvailable:false};return _this;}_createClass(LogIn,[{key:\"componentDidMount\",value:function componentDidMount(){// hämtar token från localStorage\nvar token=localStorage.getItem('token');console.log(token);// ifall token finns så vill vi uppdatera tokenAvailable så vi kan senare redirecta till /main\nif(token){this.setState({tokenAvailable:true});console.log('Token is available');}else{this.setState({tokenAvailable:false});console.log('Token is unavailable');}}// Denna funktionen låter oss logga in\n},{key:\"render\",value:function render(){var _this$state=this.state,LoginDropBox=_this$state.LoginDropBox,tokenAvailable=_this$state.tokenAvailable;if(tokenAvailable)return React.createElement(Redirect,{to:\"/main\"});return React.createElement(\"div\",null,React.createElement(\"a\",{onClick:this.LogIn,href:LoginDropBox},\"Logga in\"));}}]);return LogIn;}(Component);export default LogIn;","map":{"version":3,"sources":["C:/Users/TG/Desktop/mandatory-advanced-js5/src/Components/LogIn.js"],"names":["React","Component","Dropbox","Redirect","LogIn","props","CLIENT_ID","dbx","clientId","LocalHost","authUrl","getAuthenticationUrl","setState","LoginDropBox","state","accessToken","tokenAvailable","token","localStorage","getItem","console","log"],"mappings":"kqBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,SAAxB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CAEA;GACMC,CAAAA,K,+DACF,eAAYC,KAAZ,CAAmB,uCACf,uEAAMA,KAAN,GADe,MA2BnBD,KA3BmB,CA2BX,UAAM,CACV,GAAIE,CAAAA,SAAS,CAAG,iBAAhB,CAEA,GAAIC,CAAAA,GAAG,CAAG,GAAIL,CAAAA,OAAJ,CAAY,CAAEM,QAAQ,CAAEF,SAAZ,CAAZ,CAAV,CACA,GAAIG,CAAAA,SAAS,CAAG,4BAAhB,CACA,GAAIC,CAAAA,OAAO,CAAGH,GAAG,CAACI,oBAAJ,CAAyBF,SAAzB,CAAd,CAEA,MAAKG,QAAL,CAAc,CAAEC,YAAY,CAAEH,OAAhB,CAAd,EACH,CAnCkB,CAGf,MAAKI,KAAL,CAAa,CACTD,YAAY,CAAE,EADL,CAETE,WAAW,CAAE,KAFJ,CAGTC,cAAc,CAAE,KAHP,CAAb,CAHe,aAQlB,C,+EAEmB,CAChB;AACA,GAAIC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ,CACAC,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAEA;AACA,GAAIA,KAAJ,CAAW,CACP,KAAKL,QAAL,CAAc,CAAEI,cAAc,CAAE,IAAlB,CAAd,EACAI,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACH,CAHD,IAIK,CACD,KAAKT,QAAL,CAAc,CAAEI,cAAc,CAAE,KAAlB,CAAd,EACAI,OAAO,CAACC,GAAR,CAAY,sBAAZ,EACH,CACJ,CAED;uCAWS,iBACoC,KAAKP,KADzC,CACGD,YADH,aACGA,YADH,CACiBG,cADjB,aACiBA,cADjB,CAGL,GAAIA,cAAJ,CAAoB,MAAO,qBAAC,QAAD,EAAU,EAAE,CAAC,OAAb,EAAP,CAEpB,MACI,gCACI,yBAAG,OAAO,CAAE,KAAKZ,KAAjB,CAAwB,IAAI,CAAES,YAA9B,aADJ,CADJ,CAKH,C,mBAhDeZ,S,EAmDpB,cAAeG,CAAAA,KAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Dropbox } from \"dropbox\";\nimport { Redirect } from 'react-router-dom';\n\n// denna component låter oss logga in!\nclass LogIn extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            LoginDropBox: '',\n            accessToken: false,\n            tokenAvailable: false\n        }\n    }\n\n    componentDidMount() {\n        // hämtar token från localStorage\n        let token = localStorage.getItem('token');\n        console.log(token);\n\n        // ifall token finns så vill vi uppdatera tokenAvailable så vi kan senare redirecta till /main\n        if (token) {\n            this.setState({ tokenAvailable: true });\n            console.log('Token is available');\n        }\n        else {\n            this.setState({ tokenAvailable: false });\n            console.log('Token is unavailable');\n        }\n    }\n\n    // Denna funktionen låter oss logga in\n    LogIn = () => {\n        let CLIENT_ID = '1rw2bkl9h8tl2yb';\n\n        let dbx = new Dropbox({ clientId: CLIENT_ID });\n        let LocalHost = 'http://localhost:3000/auth';\n        let authUrl = dbx.getAuthenticationUrl(LocalHost);\n\n        this.setState({ LoginDropBox: authUrl});\n    }\n\n    render() {\n        const { LoginDropBox, tokenAvailable } = this.state;\n\n        if (tokenAvailable) return <Redirect to=\"/main\" />\n\n        return (\n            <div>\n                <a onClick={this.LogIn} href={LoginDropBox}>Logga in</a>\n            </div>\n        )\n    }\n}\n\nexport default LogIn"]},"metadata":{},"sourceType":"module"}