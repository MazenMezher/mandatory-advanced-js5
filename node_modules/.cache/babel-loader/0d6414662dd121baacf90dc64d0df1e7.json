{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TG\\\\Desktop\\\\mandatory-advanced-js5\\\\src\\\\Components\\\\MoveWindow.js\";\nimport React, { Component, PureComponent } from 'react';\nimport '../Css/Options.css';\nimport ReactDom from 'react-dom';\nimport { Dropbox } from \"dropbox\";\nimport SelectFolder from './SelectFolder';\n\nclass MoveWindow extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.setPath = current => {\n      console.log(current);\n      this.setState({\n        path: current\n      });\n    };\n\n    this.moveToFolder = () => {\n      let path_display = this.props.path_display;\n      console.log(this.state.path);\n      path_display = path_display.split('/');\n      path_display = `/${path_display[path_display.length - 1]}`;\n      console.log(path_display);\n      this.dbx.filesMoveV2({\n        from_path: this.props.path_display,\n        to_path: `${this.state.path}${path_display}`\n      }).then(res => this.props.closeMoveWindow());\n    };\n\n    this.state = {\n      path: \"\",\n      folders: [],\n      routing: []\n    };\n  }\n\n  componentDidMount() {\n    this.dbx = new Dropbox({\n      accessToken: localStorage.getItem(\"token\")\n    });\n    this.dbx.filesListFolder({\n      path: \"\"\n    }).then(response => {\n      this.setState({\n        folders: response.entries.filter(object => object[\".tag\"] === \"folder\")\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.path !== this.state.path) {\n      this.dbx.filesListFolder({\n        path: this.state.path\n      }).then(response => {\n        let pathArray = [];\n        let pathSplit = this.state.path.split('/').filter(path => path !== \"\").reduce((acc, current) => {\n          pathArray.push(acc + `/${current}`);\n          return acc + `/${current}`;\n        }, \"\");\n        this.setState({\n          folders: response.entries.filter(object => object[\".tag\"] === \"folder\"),\n          routing: pathArray\n        });\n      });\n    }\n  }\n\n  render() {\n    const {\n      folders,\n      routing\n    } = this.state;\n    return ReactDom.createPortal(React.createElement(\"div\", {\n      className: \"moveWindow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        marginBottom: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Where do you want to move?\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"routing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"start>\")), React.createElement(\"ul\", {\n      className: \"folderSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, folders.map(folder => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" \", React.createElement(SelectFolder, {\n      folder: folder,\n      setPath: this.setPath,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.moveToFolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"move to this folder\"), React.createElement(\"button\", {\n      onClick: this.props.closeMoveWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"cancel\"))), document.querySelector('#MoveWindow'));\n  }\n\n}\n\nexport default MoveWindow;","map":{"version":3,"sources":["C:/Users/TG/Desktop/mandatory-advanced-js5/src/Components/MoveWindow.js"],"names":["React","Component","PureComponent","ReactDom","Dropbox","SelectFolder","MoveWindow","constructor","props","setPath","current","console","log","setState","path","moveToFolder","path_display","state","split","length","dbx","filesMoveV2","from_path","to_path","then","res","closeMoveWindow","folders","routing","componentDidMount","accessToken","localStorage","getItem","filesListFolder","response","entries","filter","object","componentDidUpdate","prevProps","prevState","pathArray","pathSplit","reduce","acc","push","render","createPortal","marginBottom","map","folder","document","querySelector"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent } from 'react'\nimport '../Css/Options.css'\nimport ReactDom from 'react-dom'\nimport { Dropbox } from \"dropbox\";\nimport SelectFolder from './SelectFolder'\n\n\nclass MoveWindow extends PureComponent{\n  constructor(props){\n    super(props)\n    this.state = {\n      path: \"\",\n      folders: [],\n      routing: [],\n\n    }\n  }\n   setPath = (current) =>{\n     console.log(current)\n     this.setState({path: current })\n   }\n\n\n  componentDidMount(){\n    this.dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\n    this.dbx.filesListFolder({path:\"\"})\n    .then(response =>{\n      this.setState({folders: response.entries.filter(object => object[\".tag\"] ===\"folder\" )})\n    })\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    if(prevState.path !== this.state.path){\n    this.dbx.filesListFolder({path: this.state.path})\n    .then(response =>{\n      let pathArray = []\n      let pathSplit = this.state.path.split('/').filter(path => path !== \"\").reduce((acc, current) =>{\n        pathArray.push(acc+`/${current}`)\n        return acc+`/${current}`} ,\"\")\n      this.setState({folders: response.entries.filter(object => object[\".tag\"] ===\"folder\" ), routing: pathArray})\n    })\n  }\n  }\n\n  moveToFolder = () =>{\n    let path_display = this.props.path_display\n    console.log(this.state.path)\n      path_display = path_display.split('/')\n      path_display = `/${path_display[path_display.length-1]}`\n\n    console.log(path_display)\n\n    this.dbx.filesMoveV2({\n      from_path: this.props.path_display,\n      to_path: `${this.state.path}${path_display}`\n    }).then(res => this.props.closeMoveWindow())\n  }\n\n\n  render(){\n    const{folders,routing} = this.state\n\n  return ReactDom.createPortal(\n  <div className=\"moveWindow\">\n      <p style={{marginBottom: '10px'}}>Where do you want to move?</p>\n      <div>\n      <span className=\"routing\">start></span>\n\n      </div>\n\n      <ul className=\"folderSelect\">\n        {folders.map(folder =>(\n          <li > <SelectFolder folder={folder} setPath={this.setPath}/></li>\n        ))}\n\n      </ul>\n      <div>\n        <button onClick={this.moveToFolder}>move to this folder</button>\n        <button onClick={this.props.closeMoveWindow}>cancel</button>\n\n      </div>\n\n  </div>\n  ,document.querySelector('#MoveWindow')\n\n)}}\n\n\n\nexport default MoveWindow\n"]},"metadata":{},"sourceType":"module"}