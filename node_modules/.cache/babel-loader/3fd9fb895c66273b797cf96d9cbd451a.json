{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Motar\\\\Desktop\\\\Online\\\\mandatory-advanced-js5\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Motar\\\\Desktop\\\\Online\\\\mandatory-advanced-js5\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Motar\\\\Desktop\\\\Online\\\\mandatory-advanced-js5\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Motar\\\\Desktop\\\\Online\\\\mandatory-advanced-js5\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Motar\\\\Desktop\\\\Online\\\\mandatory-advanced-js5\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Dropbox}from\"dropbox\";import LeftNav from\"./LeftNav\";import Folders from\"./Folders\";import RightNav from\"./RightNav\";import Header from'./Header';import'../Css/icons.css';import'../Css/mainFiles.css';import'../Css/nav.css';import'../Css/UlItems.css';var Main=/*#__PURE__*/function(_Component){_inherits(Main,_Component);function Main(props){var _this;_classCallCheck(this,Main);_this=_possibleConstructorReturn(this,_getPrototypeOf(Main).call(this,props));_this.setFolderState=function(newFolder){_this.setState({folder:newFolder});};_this.setFileState=function(newFile){_this.setState({file:newFile});};_this.copy=function(original_path,your_path){var real_path=original_path.split('/');real_path=\"/\".concat(real_path[real_path.length-1]);_this.dbx.filesCopy({from_path:original_path,to_path:\"\".concat(your_path).concat(real_path),autorename:true});};_this.search_FOLDERS_FILES=function(e){var resFolder;_this.setState({searchQuery:e.target.value});if(e.target.value.length===0){return;}_this.dbx.filesSearch({path:'',query:e.target.value}).then(function(res){resFolder=res;var entries=res.matches.map(function(x){return x.metadata;});_this.setState({folders:entries});entries=entries.filter(function(x){return x[\".tag\"]===\"file\";}).map(function(x){return{path:x.path_display};});return _this.dbx.filesGetThumbnailBatch({entries:entries});}).then(function(res){var files=resFolder.matches.filter(function(x){return x.metadata[\".tag\"]!==\"folder\";}).map(function(x){var th=res.entries.find(function(y){return y.metadata&&y.metadata.id===x.metadata.id;});return{metadata:x.metadata,\".tag\":\"success\",thumbnail:th?th.thumbnail:null};});_this.setState({files:files});});};_this.state={folders:[],files:[],starArray:[],changes:false,searchQuery:\"\"};_this.renameRef=React.createRef();return _this;}// vi skickar den som props till Folders.js som sedan hämtar data och vi sparar den data här i state\n_createClass(Main,[{key:\"componentDidMount\",// Den renderar ut våra filer och folders\nvalue:function componentDidMount(){var _this2=this;this.setState({starArray:JSON.parse(window.localStorage.getItem(\"favorites\")||\"[]\")});this.dbx=new Dropbox({accessToken:localStorage.getItem(\"token\")});var path=\"\";if(this.props.match.params.path){path=\"/\".concat(this.props.match.params.path);}this.dbx.filesListFolder({path:path}).then(function(resFolder){_this2.dbx.filesListFolderLongpoll({cursor:resFolder.cursor}).then(function(response){_this2.setState({changes:response.changes});});var entries=resFolder.entries.filter(function(x){return x[\".tag\"]===\"file\";}).map(function(x){return{path:x.path_display};});return _this2.dbx.filesGetThumbnailBatch({entries:entries}).then(function(res){var files=resFolder.entries.filter(function(x){return x[\".tag\"]!==\"folder\";}).map(function(x){var th=res.entries.find(function(y){return y.metadata&&y.metadata.id===x.id;});return{metadata:x,\".tag\":\"success\",thumbnail:th?th.thumbnail:null};});_this2.setState({files:files,folders:resFolder.entries});});});}// den renderar våra filer och folders. Om vår url, dropbox innehåll och search funktion ändras\n},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){var _this3=this;if(this.state.changes||this.props.match.params.path!==prevProps.match.params.path||this.state.searchQuery===\"\"&&prevState.searchQuery!==this.state.searchQuery){var path=\"\";if(this.props.match.params.path){path=\"/\".concat(this.props.match.params.path);}this.dbx.filesListFolder({path:path}).then(function(resFolder){_this3.dbx.filesListFolderLongpoll({cursor:resFolder.cursor}).then(function(response){return _this3.setState({changes:response.changes});});var entries=resFolder.entries.filter(function(x){return x[\".tag\"]===\"file\";}).map(function(x){return{path:x.path_display};});return _this3.dbx.filesGetThumbnailBatch({entries:entries}).then(function(res){var files=resFolder.entries.filter(function(x){return x[\".tag\"]!==\"folder\";}).map(function(x){var th=res.entries.find(function(y){return y.metadata&&y.metadata.id===x.id;});return{metadata:x,\".tag\":\"success\",thumbnail:th?th.thumbnail:null};});_this3.setState({files:files,folders:resFolder.entries,changes:false});});});}}// denna funktionen gör så att när vi har sökt något så renderar den ut de vi har sökt, beroende om de är filer eller folders\n},{key:\"render\",// här visas allt innehåll på sidan\nvalue:function render(){var _this$state=this.state,folders=_this$state.folders,files=_this$state.files;return React.createElement(\"div\",{className:\"App\"},React.createElement(LeftNav,{dbx:this.dbx}),React.createElement(\"div\",{className:\"bigBox\"},React.createElement(Header,{search_FOLDERS_FILES:this.search_FOLDERS_FILES,path:this.props.match.params.path}),React.createElement(\"main\",null,React.createElement(Folders,{dbx:this.dbx,files:files,renameFiles:this.renameFiles,updateFileName:this.updateFileName,copy:this.copy,renameFolders:this.renameFolders,updateFolderName:this.updateFolderName,folders:folders,onDelete:this.onDelete,setFileState:this.setFileState,setFolderState:this.setFolderState}),React.createElement(RightNav,{path:this.props.match.params.path,files:files,folders:folders,dbx:this.dbx,setFileState:this.setFileState,setFolderState:this.setFolderState}))));}}]);return Main;}(Component);export default Main;","map":{"version":3,"sources":["C:/Users/Motar/Desktop/Online/mandatory-advanced-js5/src/Components/Main.js"],"names":["React","Component","Dropbox","LeftNav","Folders","RightNav","Header","Main","props","setFolderState","newFolder","setState","folder","setFileState","newFile","file","copy","original_path","your_path","real_path","split","length","dbx","filesCopy","from_path","to_path","autorename","search_FOLDERS_FILES","e","resFolder","searchQuery","target","value","filesSearch","path","query","then","res","entries","matches","map","x","metadata","folders","filter","path_display","filesGetThumbnailBatch","files","th","find","y","id","thumbnail","state","starArray","changes","renameRef","createRef","JSON","parse","window","localStorage","getItem","accessToken","match","params","filesListFolder","filesListFolderLongpoll","cursor","response","prevProps","prevState","renameFiles","updateFileName","renameFolders","updateFolderName","onDelete"],"mappings":"ytBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,SAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA,MAAO,kBAAP,CACA,MAAO,sBAAP,CACA,MAAO,gBAAP,CACA,MAAO,oBAAP,C,GAEMC,CAAAA,I,8DACF,cAAYC,KAAZ,CAAmB,sCACf,sEAAMA,KAAN,GADe,MAenBC,cAfmB,CAeF,SAACC,SAAD,CAAc,CAC7B,MAAKC,QAAL,CAAc,CAACC,MAAM,CAAEF,SAAT,CAAd,EACD,CAjBkB,OAoBnBG,YApBmB,CAoBJ,SAACC,OAAD,CAAY,CACzB,MAAKH,QAAL,CAAc,CAACI,IAAI,CAAED,OAAP,CAAd,EACD,CAtBkB,OAyBnBE,IAzBmB,CAyBZ,SAACC,aAAD,CAAgBC,SAAhB,CAA6B,CAClC,GAAIC,CAAAA,SAAS,CAAGF,aAAa,CAACG,KAAd,CAAoB,GAApB,CAAhB,CACAD,SAAS,YAAOA,SAAS,CAACA,SAAS,CAACE,MAAV,CAAiB,CAAlB,CAAhB,CAAT,CACA,MAAKC,GAAL,CAASC,SAAT,CAAmB,CACjBC,SAAS,CAAEP,aADM,CAEjBQ,OAAO,WAAKP,SAAL,SAAiBC,SAAjB,CAFU,CAGjBO,UAAU,CAAE,IAHK,CAAnB,EAKD,CAjCkB,OAsHrBC,oBAtHqB,CAsHE,SAACC,CAAD,CAAO,CAC5B,GAAIC,CAAAA,SAAJ,CAEA,MAAKlB,QAAL,CAAc,CAAEmB,WAAW,CAAEF,CAAC,CAACG,MAAF,CAASC,KAAxB,CAAd,EAEA,GAAIJ,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeX,MAAf,GAA0B,CAA9B,CAAiC,CAC/B,OACD,CAED,MAAKC,GAAL,CAASW,WAAT,CAAqB,CAAEC,IAAI,CAAE,EAAR,CAAaC,KAAK,CAAEP,CAAC,CAACG,MAAF,CAASC,KAA7B,CAArB,EACCI,IADD,CACM,SAAAC,GAAG,CAAI,CAEXR,SAAS,CAAGQ,GAAZ,CACA,GAAIC,CAAAA,OAAO,CAAGD,GAAG,CAACE,OAAJ,CAAYC,GAAZ,CAAgB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,QAAN,EAAjB,CAAd,CAEA,MAAK/B,QAAL,CAAc,CAAEgC,OAAO,CAAEL,OAAX,CAAd,EACAA,OAAO,CAAGA,OAAO,CACdM,MADO,CACA,SAAAH,CAAC,QAAIA,CAAAA,CAAC,CAAC,MAAD,CAAD,GAAc,MAAlB,EADD,EAEPD,GAFO,CAEH,SAACC,CAAD,QAAQ,CAAEP,IAAI,CAAEO,CAAC,CAACI,YAAV,CAAR,EAFG,CAAV,CAGA,MAAO,OAAKvB,GAAL,CAASwB,sBAAT,CAAgC,CACrCR,OAAO,CAAEA,OAD4B,CAAhC,CAAP,CAGC,CAbH,EAcGF,IAdH,CAcQ,SAACC,GAAD,CAAS,CACb,GAAMU,CAAAA,KAAK,CAAGlB,SAAS,CAACU,OAAV,CACbK,MADa,CACN,SAAAH,CAAC,QAAIA,CAAAA,CAAC,CAACC,QAAF,CAAW,MAAX,IAAuB,QAA3B,EADK,EAEbF,GAFa,CAET,SAAAC,CAAC,CAAI,CACR,GAAMO,CAAAA,EAAE,CAAGX,GAAG,CAACC,OAAJ,CAAYW,IAAZ,CAAiB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACR,QAAF,EAAcQ,CAAC,CAACR,QAAF,CAAWS,EAAX,GAAkBV,CAAC,CAACC,QAAF,CAAWS,EAA/C,EAAlB,CAAX,CAEA,MAAO,CACLT,QAAQ,CAAED,CAAC,CAACC,QADP,CAEL,OAAQ,SAFH,CAGLU,SAAS,CAAEJ,EAAE,CAAGA,EAAE,CAACI,SAAN,CAAkB,IAH1B,CAAP,CAKD,CAVa,CAAd,CAWA,MAAKzC,QAAL,CAAc,CAAEoC,KAAK,CAAEA,KAAT,CAAd,EACD,CA3BH,EA4BD,CA3JoB,CAGf,MAAKM,KAAL,CAAa,CACXV,OAAO,CAAE,EADE,CAEXI,KAAK,CAAE,EAFI,CAGXO,SAAS,CAAE,EAHA,CAKXC,OAAO,CAAE,KALE,CAMXzB,WAAW,CAAE,EANF,CAAb,CAQA,MAAK0B,SAAL,CAAiBxD,KAAK,CAACyD,SAAN,EAAjB,CAXe,aAYlB,CAED;4CAqBA;kCACoB,iBAClB,KAAK9C,QAAL,CAAc,CACZ2C,SAAS,CAAEI,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,GAA4C,IAAvD,CADC,CAAd,EAIA,KAAKxC,GAAL,CAAW,GAAIpB,CAAAA,OAAJ,CAAY,CAAE6D,WAAW,CAAEF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAf,CAAZ,CAAX,CACA,GAAI5B,CAAAA,IAAI,CAAG,EAAX,CAEA,GAAG,KAAK1B,KAAL,CAAWwD,KAAX,CAAiBC,MAAjB,CAAwB/B,IAA3B,CAAgC,CAC9BA,IAAI,YAAO,KAAK1B,KAAL,CAAWwD,KAAX,CAAiBC,MAAjB,CAAwB/B,IAA/B,CAAJ,CACD,CAED,KAAKZ,GAAL,CAAS4C,eAAT,CAAyB,CAAEhC,IAAI,CAAEA,IAAR,CAAzB,EACCE,IADD,CACM,SAACP,SAAD,CAAe,CACnB,MAAI,CAACP,GAAL,CAAS6C,uBAAT,CAAiC,CAACC,MAAM,CAAEvC,SAAS,CAACuC,MAAnB,CAAjC,EACChC,IADD,CACM,SAAAiC,QAAQ,CAAI,CAChB,MAAI,CAAC1D,QAAL,CAAc,CAAC4C,OAAO,CAAEc,QAAQ,CAACd,OAAnB,CAAd,EACD,CAHD,EAKA,GAAMjB,CAAAA,OAAO,CAAGT,SAAS,CAACS,OAAV,CACbM,MADa,CACN,SAAAH,CAAC,QAAIA,CAAAA,CAAC,CAAC,MAAD,CAAD,GAAc,MAAlB,EADK,EAEbD,GAFa,CAET,SAACC,CAAD,QAAQ,CAAEP,IAAI,CAAEO,CAAC,CAACI,YAAV,CAAR,EAFS,CAAhB,CAGA,MAAO,CAAA,MAAI,CAACvB,GAAL,CAASwB,sBAAT,CAAgC,CACrCR,OAAO,CAAEA,OAD4B,CAAhC,EAGNF,IAHM,CAGD,SAACC,GAAD,CAAS,CACb,GAAMU,CAAAA,KAAK,CAAGlB,SAAS,CAACS,OAAV,CACXM,MADW,CACJ,SAAAH,CAAC,QAAIA,CAAAA,CAAC,CAAC,MAAD,CAAD,GAAc,QAAlB,EADG,EAEXD,GAFW,CAEP,SAAAC,CAAC,CAAI,CACR,GAAMO,CAAAA,EAAE,CAAGX,GAAG,CAACC,OAAJ,CAAYW,IAAZ,CAAiB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACR,QAAF,EAAcQ,CAAC,CAACR,QAAF,CAAWS,EAAX,GAAkBV,CAAC,CAACU,EAAtC,EAAlB,CAAX,CAEA,MAAO,CACLT,QAAQ,CAAED,CADL,CAEL,OAAQ,SAFH,CAGLW,SAAS,CAAEJ,EAAE,CAAGA,EAAE,CAACI,SAAN,CAAkB,IAH1B,CAAP,CAKD,CAVW,CAAd,CAYA,MAAI,CAACzC,QAAL,CAAc,CAAEoC,KAAK,CAAEA,KAAT,CAAgBJ,OAAO,CAAEd,SAAS,CAACS,OAAnC,CAAd,EACD,CAjBM,CAAP,CAkBD,CA5BD,EA6BD,CAED;8DACmBgC,S,CAAWC,S,CAAW,iBACvC,GAAI,KAAKlB,KAAL,CAAWE,OAAX,EAAsB,KAAK/C,KAAL,CAAWwD,KAAX,CAAiBC,MAAjB,CAAwB/B,IAAxB,GAAiCoC,SAAS,CAACN,KAAV,CAAgBC,MAAhB,CAAuB/B,IAA9E,EAAuF,KAAKmB,KAAL,CAAWvB,WAAX,GAA2B,EAA3B,EAAkCyC,SAAS,CAACzC,WAAV,GAA0B,KAAKuB,KAAL,CAAWvB,WAAlK,CAAiL,CAE/K,GAAII,CAAAA,IAAI,CAAG,EAAX,CACA,GAAG,KAAK1B,KAAL,CAAWwD,KAAX,CAAiBC,MAAjB,CAAwB/B,IAA3B,CAAgC,CAC9BA,IAAI,YAAO,KAAK1B,KAAL,CAAWwD,KAAX,CAAiBC,MAAjB,CAAwB/B,IAA/B,CAAJ,CACD,CACD,KAAKZ,GAAL,CAAS4C,eAAT,CAAyB,CAAEhC,IAAI,CAAEA,IAAR,CAAzB,EACCE,IADD,CACM,SAACP,SAAD,CAAe,CAEnB,MAAI,CAACP,GAAL,CAAS6C,uBAAT,CAAiC,CAACC,MAAM,CAAEvC,SAAS,CAACuC,MAAnB,CAAjC,EACChC,IADD,CACM,SAAAiC,QAAQ,QAAI,CAAA,MAAI,CAAC1D,QAAL,CAAc,CAAC4C,OAAO,CAAEc,QAAQ,CAACd,OAAnB,CAAd,CAAJ,EADd,EAGA,GAAMjB,CAAAA,OAAO,CAAGT,SAAS,CAACS,OAAV,CACbM,MADa,CACN,SAAAH,CAAC,QAAIA,CAAAA,CAAC,CAAC,MAAD,CAAD,GAAc,MAAlB,EADK,EAEbD,GAFa,CAET,SAACC,CAAD,QAAQ,CAAEP,IAAI,CAAEO,CAAC,CAACI,YAAV,CAAR,EAFS,CAAhB,CAGA,MAAO,CAAA,MAAI,CAACvB,GAAL,CAASwB,sBAAT,CAAgC,CACrCR,OAAO,CAAEA,OAD4B,CAAhC,EAGNF,IAHM,CAGD,SAACC,GAAD,CAAS,CACb,GAAMU,CAAAA,KAAK,CAAGlB,SAAS,CAACS,OAAV,CACbM,MADa,CACN,SAAAH,CAAC,QAAIA,CAAAA,CAAC,CAAC,MAAD,CAAD,GAAc,QAAlB,EADK,EAEbD,GAFa,CAET,SAAAC,CAAC,CAAI,CACR,GAAMO,CAAAA,EAAE,CAAGX,GAAG,CAACC,OAAJ,CAAYW,IAAZ,CAAiB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACR,QAAF,EAAcQ,CAAC,CAACR,QAAF,CAAWS,EAAX,GAAkBV,CAAC,CAACU,EAAtC,EAAlB,CAAX,CAEA,MAAO,CACLT,QAAQ,CAAED,CADL,CAEL,OAAQ,SAFH,CAGLW,SAAS,CAAEJ,EAAE,CAAGA,EAAE,CAACI,SAAN,CAAkB,IAH1B,CAAP,CAKD,CAVa,CAAd,CAWA,MAAI,CAACzC,QAAL,CAAc,CAAEoC,KAAK,CAAEA,KAAT,CAAgBJ,OAAO,CAAEd,SAAS,CAACS,OAAnC,CAA4CiB,OAAO,CAAC,KAApD,CAAd,EACD,CAhBM,CAAP,CAiBD,CA1BD,EA2BH,CACF,CAED;gBAwCA;uBACW,iBACoB,KAAKF,KADzB,CACCV,OADD,aACCA,OADD,CACUI,KADV,aACUA,KADV,CAGL,MACE,4BAAK,SAAS,CAAC,KAAf,EACA,oBAAC,OAAD,EAAS,GAAG,CAAE,KAAKzB,GAAnB,EADA,CAEF,2BAAK,SAAS,CAAE,QAAhB,EACE,oBAAC,MAAD,EAAQ,oBAAoB,CAAE,KAAKK,oBAAnC,CAAyD,IAAI,CAAE,KAAKnB,KAAL,CAAWwD,KAAX,CAAiBC,MAAjB,CAAwB/B,IAAvF,EADF,CAEE,gCACE,oBAAC,OAAD,EAAS,GAAG,CAAE,KAAKZ,GAAnB,CAAwB,KAAK,CAAEyB,KAA/B,CAAsC,WAAW,CAAE,KAAKyB,WAAxD,CAAqE,cAAc,CAAE,KAAKC,cAA1F,CAA0G,IAAI,CAAE,KAAKzD,IAArH,CACA,aAAa,CAAE,KAAK0D,aADpB,CACmC,gBAAgB,CAAE,KAAKC,gBAD1D,CAC4E,OAAO,CAAEhC,OADrF,CAC8F,QAAQ,CAAE,KAAKiC,QAD7G,CACwH,YAAY,CAAE,KAAK/D,YAD3I,CACyJ,cAAc,CAAE,KAAKJ,cAD9K,EADF,CAGE,oBAAC,QAAD,EAAU,IAAI,CAAE,KAAKD,KAAL,CAAWwD,KAAX,CAAiBC,MAAjB,CAAwB/B,IAAxC,CAA8C,KAAK,CAAEa,KAArD,CAA4D,OAAO,CAAEJ,OAArE,CAA8E,GAAG,CAAE,KAAKrB,GAAxF,CAA6F,YAAY,CAAE,KAAKT,YAAhH,CAA8H,cAAc,CAAE,KAAKJ,cAAnJ,EAHF,CAFF,CAFE,CADF,CAaH,C,kBA/KcR,S,EAkLnB,cAAeM,CAAAA,IAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Dropbox } from \"dropbox\";\r\nimport LeftNav from \"./LeftNav\"\r\nimport Folders from \"./Folders\"\r\nimport RightNav from \"./RightNav\"\r\nimport Header from './Header'\r\n\r\nimport '../Css/icons.css'\r\nimport '../Css/mainFiles.css'\r\nimport '../Css/nav.css'\r\nimport '../Css/UlItems.css'\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n          folders: [],\r\n          files: [],\r\n          starArray: [],\r\n\r\n          changes: false,\r\n          searchQuery: \"\"\r\n        }\r\n        this.renameRef = React.createRef();\r\n    }\r\n\r\n    // vi skickar den som props till Folders.js som sedan hämtar data och vi sparar den data här i state\r\n    setFolderState = (newFolder) =>{\r\n      this.setState({folder: newFolder})\r\n    }\r\n\r\n    // vi skickar den som props till Folders.js som sedan hämtar data och vi sparar den data här i state\r\n    setFileState = (newFile) =>{\r\n      this.setState({file: newFile})\r\n    }\r\n\r\n    // funktionen kopierar filer och folders!\r\n    copy = (original_path, your_path) =>{\r\n      let real_path = original_path.split('/')\r\n      real_path = `/${real_path[real_path.length-1]}`\r\n      this.dbx.filesCopy({\r\n        from_path: original_path,\r\n        to_path: `${your_path}${real_path}`,\r\n        autorename: true,\r\n      })\r\n    }\r\n\r\n    // Den renderar ut våra filer och folders\r\n    componentDidMount() {\r\n      this.setState({\r\n        starArray: JSON.parse(window.localStorage.getItem(\"favorites\") || \"[]\")\r\n      });\r\n\r\n      this.dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\r\n      let path = \"\"\r\n\r\n      if(this.props.match.params.path){\r\n        path = `/${this.props.match.params.path}`\r\n      }\r\n\r\n      this.dbx.filesListFolder({ path: path })\r\n      .then((resFolder) => {\r\n        this.dbx.filesListFolderLongpoll({cursor: resFolder.cursor})\r\n        .then(response => {\r\n          this.setState({changes: response.changes})\r\n        })\r\n\r\n        const entries = resFolder.entries\r\n          .filter(x => x[\".tag\"] === \"file\")\r\n          .map((x) => ({ path: x.path_display }));\r\n        return this.dbx.filesGetThumbnailBatch({\r\n          entries: entries,\r\n        })\r\n        .then((res) => {\r\n          const files = resFolder.entries\r\n            .filter(x => x[\".tag\"] !== \"folder\")\r\n            .map(x => {\r\n              const th = res.entries.find(y => y.metadata && y.metadata.id === x.id);\r\n\r\n              return {\r\n                metadata: x,\r\n                \".tag\": \"success\",\r\n                thumbnail: th ? th.thumbnail : null,\r\n              }\r\n            });\r\n\r\n          this.setState({ files: files, folders: resFolder.entries});\r\n        })\r\n      })\r\n    }\r\n\r\n    // den renderar våra filer och folders. Om vår url, dropbox innehåll och search funktion ändras\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (this.state.changes || this.props.match.params.path !== prevProps.match.params.path || (this.state.searchQuery === \"\" && (prevState.searchQuery !== this.state.searchQuery))) {\r\n\r\n        let path = \"\"\r\n        if(this.props.match.params.path){\r\n          path = `/${this.props.match.params.path}`\r\n        }\r\n        this.dbx.filesListFolder({ path: path })\r\n        .then((resFolder) => {\r\n\r\n          this.dbx.filesListFolderLongpoll({cursor: resFolder.cursor})\r\n          .then(response => this.setState({changes: response.changes}))\r\n\r\n          const entries = resFolder.entries\r\n            .filter(x => x[\".tag\"] === \"file\")\r\n            .map((x) => ({ path: x.path_display }));\r\n          return this.dbx.filesGetThumbnailBatch({\r\n            entries: entries,\r\n          })\r\n          .then((res) => {\r\n            const files = resFolder.entries\r\n            .filter(x => x[\".tag\"] !== \"folder\")\r\n            .map(x => {\r\n              const th = res.entries.find(y => y.metadata && y.metadata.id === x.id);\r\n\r\n              return {\r\n                metadata: x,\r\n                \".tag\": \"success\",\r\n                thumbnail: th ? th.thumbnail : null,\r\n              }\r\n            });\r\n            this.setState({ files: files, folders: resFolder.entries, changes:false });\r\n          })\r\n        })\r\n    }\r\n  }\r\n\r\n  // denna funktionen gör så att när vi har sökt något så renderar den ut de vi har sökt, beroende om de är filer eller folders\r\n  search_FOLDERS_FILES = (e) => {\r\n    let resFolder;\r\n\r\n    this.setState({ searchQuery: e.target.value });\r\n\r\n    if (e.target.value.length === 0) {\r\n      return;\r\n    }\r\n\r\n    this.dbx.filesSearch({ path: '' , query: e.target.value})\r\n    .then(res => {\r\n\r\n      resFolder = res;\r\n      let entries = res.matches.map(x => x.metadata);\r\n\r\n      this.setState({ folders: entries });\r\n      entries = entries\r\n        .filter(x => x[\".tag\"] === \"file\")\r\n        .map((x) => ({ path: x.path_display }));\r\n      return this.dbx.filesGetThumbnailBatch({\r\n        entries: entries,\r\n      });\r\n      })\r\n      .then((res) => {\r\n        const files = resFolder.matches\r\n        .filter(x => x.metadata[\".tag\"] !== \"folder\")\r\n        .map(x => {\r\n          const th = res.entries.find(y => y.metadata && y.metadata.id === x.metadata.id);\r\n\r\n          return {\r\n            metadata: x.metadata,\r\n            \".tag\": \"success\",\r\n            thumbnail: th ? th.thumbnail : null,\r\n          }\r\n        });\r\n        this.setState({ files: files });\r\n      });\r\n  }\r\n\r\n  // här visas allt innehåll på sidan\r\n    render() {\r\n      const { folders, files } = this.state;\r\n\r\n        return (\r\n          <div className=\"App\" >\r\n          <LeftNav dbx={this.dbx}/>\r\n        <div className={\"bigBox\"}>\r\n          <Header search_FOLDERS_FILES={this.search_FOLDERS_FILES} path={this.props.match.params.path}/>\r\n          <main>\r\n            <Folders dbx={this.dbx} files={files} renameFiles={this.renameFiles} updateFileName={this.updateFileName} copy={this.copy}\r\n            renameFolders={this.renameFolders} updateFolderName={this.updateFolderName} folders={folders} onDelete={this.onDelete}  setFileState={this.setFileState} setFolderState={this.setFolderState}/>\r\n            <RightNav path={this.props.match.params.path} files={files} folders={folders} dbx={this.dbx} setFileState={this.setFileState} setFolderState={this.setFolderState} />\r\n          </main>\r\n        </div>\r\n    </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default Main"]},"metadata":{},"sourceType":"module"}