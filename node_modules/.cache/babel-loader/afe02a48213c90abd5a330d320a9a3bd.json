{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Motar\\\\Desktop\\\\mandatory-advanced-js5\\\\src\\\\Components\\\\MoveWindow.js\";\nimport React, { PureComponent } from 'react';\nimport '../Css/Options.css';\nimport '../Css/filefolder.css';\nimport ReactDom from 'react-dom';\nimport { Dropbox } from \"dropbox\";\nimport SelectFolder from './SelectFolder';\nimport RouterForMoveWindow from './RouterForMoveWindow'; // Denna komponenten renderar ut föstret när vi vill flytta folder/filer\n\nclass MoveWindow extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.setPath = current => {\n      console.log(current);\n      this.setState({\n        path: current\n      });\n    };\n\n    this.onClickRouting = route => {\n      this.setState({\n        path: route\n      });\n    };\n\n    this.moveToFolder = () => {\n      let path_display = this.props.path_display;\n      console.log(this.state.path);\n      path_display = path_display.split('/');\n      path_display = `/${path_display[path_display.length - 1]}`;\n      this.dbx.filesMoveV2({\n        from_path: this.props.path_display,\n        to_path: `${this.state.path}${path_display}`\n      }).then(res => this.props.closeMoveWindow());\n    };\n\n    this.goBack = () => {\n      let path = this.state.path.split('/').filter(path => path !== \"\");\n      let newPath = path.reduce((acc, current, idx) => idx !== path.length - 1 ? acc + `/${current}` : acc + \"\", \"\");\n      this.setState({\n        path: newPath\n      });\n    };\n\n    this.toStart = () => {\n      this.setState({\n        path: \"\"\n      });\n    };\n\n    this.state = {\n      path: \"\",\n      folders: [],\n      routing: []\n    };\n  }\n\n  componentDidMount() {\n    this.dbx = new Dropbox({\n      accessToken: localStorage.getItem(\"token\")\n    });\n    this.dbx.filesListFolder({\n      path: \"\"\n    }).then(response => {\n      this.setState({\n        folders: response.entries.filter(object => object[\".tag\"] === \"folder\")\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.path !== this.state.path) {\n      this.dbx.filesListFolder({\n        path: this.state.path\n      }).then(response => {\n        let pathArray = [];\n        let pathSplit = this.state.path.split('/').filter(path => path !== \"\").reduce((acc, current) => {\n          pathArray.push(acc + `/${current}`);\n          return acc + `/${current}`;\n        }, \"\");\n        this.setState({\n          folders: response.entries.filter(object => object[\".tag\"] === \"folder\"),\n          routing: pathArray\n        });\n      });\n    }\n  }\n\n  render() {\n    const {\n      folders,\n      routing\n    } = this.state;\n    return ReactDom.createPortal(React.createElement(\"div\", {\n      className: \"moveWindow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        marginBottom: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Where do you want to move?\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"routing\",\n      onClick: this.toStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"start>\"), routing.map(route => React.createElement(RouterForMoveWindow, {\n      route: route,\n      onClickRouting: this.onClickRouting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))), React.createElement(\"ul\", {\n      className: \"folderSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, folders.map(folder => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \" \", React.createElement(SelectFolder, {\n      folder: folder,\n      setPath: this.setPath,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.moveToFolder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"move to this folder\"), React.createElement(\"button\", {\n      onClick: this.goBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Go Back\"), React.createElement(\"button\", {\n      onClick: this.props.closeMoveWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"cancel\"))), document.querySelector('#MoveWindow'));\n  }\n\n}\n\nexport default MoveWindow;","map":{"version":3,"sources":["C:/Users/Motar/Desktop/mandatory-advanced-js5/src/Components/MoveWindow.js"],"names":["React","PureComponent","ReactDom","Dropbox","SelectFolder","RouterForMoveWindow","MoveWindow","constructor","props","setPath","current","console","log","setState","path","onClickRouting","route","moveToFolder","path_display","state","split","length","dbx","filesMoveV2","from_path","to_path","then","res","closeMoveWindow","goBack","filter","newPath","reduce","acc","idx","toStart","folders","routing","componentDidMount","accessToken","localStorage","getItem","filesListFolder","response","entries","object","componentDidUpdate","prevProps","prevState","pathArray","pathSplit","push","render","createPortal","marginBottom","map","folder","document","querySelector"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport '../Css/Options.css'\r\nimport '../Css/filefolder.css'\r\nimport ReactDom from 'react-dom'\r\nimport { Dropbox } from \"dropbox\";\r\nimport SelectFolder from './SelectFolder'\r\nimport RouterForMoveWindow from './RouterForMoveWindow'\r\n\r\n// Denna komponenten renderar ut föstret när vi vill flytta folder/filer\r\nclass MoveWindow extends PureComponent{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      path: \"\",\r\n      folders: [],\r\n      routing: [],\r\n    }\r\n  }\r\n\r\n  setPath = (current) =>{\r\n    console.log(current)\r\n    this.setState({path: current })\r\n  }\r\n\r\n  onClickRouting = (route) =>{\r\n    this.setState({path:route})\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\r\n    this.dbx.filesListFolder({path:\"\"})\r\n    .then(response =>{\r\n      this.setState({folders: response.entries.filter(object => object[\".tag\"] ===\"folder\" )})\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps,prevState){\r\n    if(prevState.path !== this.state.path){\r\n    this.dbx.filesListFolder({path: this.state.path})\r\n    .then(response =>{\r\n      let pathArray = []\r\n      let pathSplit = this.state.path.split('/').filter(path => path !== \"\").reduce((acc, current) =>{\r\n        pathArray.push(acc+`/${current}`)\r\n        return acc+`/${current}`} ,\"\")\r\n      this.setState({folders: response.entries.filter(object => object[\".tag\"] ===\"folder\" ), routing: pathArray})\r\n    })\r\n  }\r\n  }\r\n\r\n  moveToFolder = () =>{\r\n    let path_display = this.props.path_display\r\n    console.log(this.state.path)\r\n      path_display = path_display.split('/')\r\n      path_display = `/${path_display[path_display.length-1]}`\r\n\r\n    this.dbx.filesMoveV2({\r\n      from_path: this.props.path_display,\r\n      to_path: `${this.state.path}${path_display}`\r\n    }).then(res => this.props.closeMoveWindow())\r\n  }\r\n\r\n  goBack = () =>{\r\n    let path = this.state.path.split('/').filter(path => path !== \"\")\r\n    let newPath = path.reduce((acc, current, idx ) =>( idx !== path.length-1 ? acc + `/${current}` : acc + \"\") , \"\")\r\n    this.setState({path: newPath})\r\n  }\r\n\r\n  toStart = () =>{\r\n    this.setState({path:\"\"})\r\n  }\r\n\r\n  render(){\r\n    const{folders,routing} = this.state\r\n\r\n    return ReactDom.createPortal(\r\n    <div className=\"moveWindow\">\r\n        <p style={{marginBottom: '10px'}}>Where do you want to move?</p>\r\n        <div>\r\n        <span className=\"routing\" onClick={this.toStart}>start></span>\r\n        {routing.map(route =>(\r\n          <RouterForMoveWindow route={route} onClickRouting={this.onClickRouting}/>\r\n        ))}\r\n        </div>\r\n\r\n        <ul className=\"folderSelect\">\r\n          {folders.map(folder =>(\r\n            <li > <SelectFolder folder={folder} setPath={this.setPath}/></li>\r\n          ))}\r\n\r\n        </ul>\r\n        <div>\r\n          <button onClick={this.moveToFolder}>move to this folder</button>\r\n          <button onClick={this.goBack}>Go Back</button>\r\n          <button onClick={this.props.closeMoveWindow}>cancel</button>\r\n        </div>\r\n    </div>\r\n    ,document.querySelector('#MoveWindow')\r\n)}}\r\n\r\nexport default MoveWindow"]},"metadata":{},"sourceType":"module"}