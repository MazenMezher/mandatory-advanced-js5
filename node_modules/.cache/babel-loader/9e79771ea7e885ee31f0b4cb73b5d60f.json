{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Motar\\\\Desktop\\\\Online\\\\mandatory-advanced-js5\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Motar\\\\Desktop\\\\Online\\\\mandatory-advanced-js5\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Motar\\\\Desktop\\\\Online\\\\mandatory-advanced-js5\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Motar\\\\Desktop\\\\Online\\\\mandatory-advanced-js5\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Motar\\\\Desktop\\\\Online\\\\mandatory-advanced-js5\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{PureComponent}from'react';import'../Css/filefolder.css';import ReactDom from'react-dom';import{Dropbox}from\"dropbox\";import CopyFolderList from'./CopyFolderList';import RouterForCopyWindow from'./RouterForCopyWindow';// Denna component renderar ut själva fönstret där man kan välja vilka folder man vill kopiera till\nvar CopyWindow=/*#__PURE__*/function(_PureComponent){_inherits(CopyWindow,_PureComponent);function CopyWindow(props){var _this;_classCallCheck(this,CopyWindow);_this=_possibleConstructorReturn(this,_getPrototypeOf(CopyWindow).call(this,props));_this.clickAnotherFolder=function(path_display){_this.setState({path:path_display});};_this.copyIntoSelectedFolder=function(){var _this$props=_this.props,copy=_this$props.copy,closeCopyWindow=_this$props.closeCopyWindow,path_display=_this$props.path_display;var path=_this.state.path;copy(path_display,path);closeCopyWindow();};_this.goBack=function(){var path=_this.state.path.split('/').filter(function(path){return path!==\"\";});var newPath=path.reduce(function(acc,current,idx){return idx!==path.length-1?acc+\"/\".concat(current):acc+\"\";},\"\");_this.setState({path:newPath});};_this.onClickRouting=function(route){_this.setState({path:route});};_this.onStartClick=function(){_this.setState({path:\"\"});};_this.state={path:\"\",folders:[],routing:[]};return _this;}_createClass(CopyWindow,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.dbx=new Dropbox({accessToken:localStorage.getItem(\"token\")});this.dbx.filesListFolder({path:\"\"}).then(function(response){_this2.setState({folders:response.entries.filter(function(object){return object[\".tag\"]===\"folder\";})});});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){var _this3=this;if(prevState.path!==this.state.path){this.dbx.filesListFolder({path:this.state.path}).then(function(response){var pathArray=[];var pathSplit=_this3.state.path.split('/').filter(function(path){return path!==\"\";}).reduce(function(acc,current){pathArray.push(acc+\"/\".concat(current));return acc+\"/\".concat(current);},\"\");_this3.setState({folders:response.entries.filter(function(object){return object[\".tag\"]===\"folder\";}),routing:pathArray});});}}},{key:\"render\",value:function render(){var _this4=this;var _this$state=this.state,folders=_this$state.folders,path=_this$state.path,routing=_this$state.routing;console.log(path);return ReactDom.createPortal(React.createElement(\"div\",{className:\"CopyWindow\"},React.createElement(\"div\",null,\"which folder do you want to copy it too?\"),React.createElement(\"div\",{className:\"routeDiv\"},React.createElement(\"span\",{className:\"routing\",onClick:this.onStartClick},\"start>\"),routing.map(function(route){return React.createElement(RouterForCopyWindow,{route:route,onClickRouting:_this4.onClickRouting});})),React.createElement(\"ul\",{className:\"selectFolder\"},folders.map(function(folder){return React.createElement(CopyFolderList,{folder:folder,clickAnotherFolder:_this4.clickAnotherFolder,copy:_this4.props.copy});})),React.createElement(\"div\",null,React.createElement(\"button\",{onClick:this.copyIntoSelectedFolder},\"Copy into selected folder\"),React.createElement(\"button\",{onClick:this.goBack},\"Go Back\"),React.createElement(\"button\",{onClick:this.props.closeCopyWindow},\"Cancel\"))),document.querySelector('#CopyWindow'));}}]);return CopyWindow;}(PureComponent);export default CopyWindow;","map":{"version":3,"sources":["C:/Users/Motar/Desktop/Online/mandatory-advanced-js5/src/Components/CopyWindow.js"],"names":["React","PureComponent","ReactDom","Dropbox","CopyFolderList","RouterForCopyWindow","CopyWindow","props","clickAnotherFolder","path_display","setState","path","copyIntoSelectedFolder","copy","closeCopyWindow","state","goBack","split","filter","newPath","reduce","acc","current","idx","length","onClickRouting","route","onStartClick","folders","routing","dbx","accessToken","localStorage","getItem","filesListFolder","then","response","entries","object","prevProps","prevState","pathArray","pathSplit","push","console","log","createPortal","map","folder","document","querySelector"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport '../Css/filefolder.css'\r\nimport ReactDom from 'react-dom'\r\nimport { Dropbox } from \"dropbox\";\r\nimport CopyFolderList from './CopyFolderList'\r\nimport RouterForCopyWindow from './RouterForCopyWindow'\r\n\r\n// Denna component renderar ut själva fönstret där man kan välja vilka folder man vill kopiera till\r\nclass CopyWindow extends PureComponent{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      path: \"\",\r\n      folders: [],\r\n      routing: [],\r\n    }\r\n  }\r\n\r\n  clickAnotherFolder = (path_display) =>{\r\n    this.setState({path:path_display})\r\n  }\r\n\r\n  copyIntoSelectedFolder = () =>{\r\n    const{copy,closeCopyWindow,path_display} = this.props\r\n    const{path} = this.state\r\n    copy(path_display, path)\r\n    closeCopyWindow()\r\n  }\r\n\r\n  goBack = () =>{\r\n    let path = this.state.path.split('/').filter(path => path !== \"\")\r\n    let newPath = path.reduce((acc, current, idx ) =>( idx !== path.length-1 ? acc + `/${current}` : acc + \"\") , \"\")\r\n    this.setState({path: newPath})\r\n  }\r\n\r\n  onClickRouting = (route) =>{\r\n    this.setState({path:route})\r\n  }\r\n\r\n  onStartClick = () =>{\r\n    this.setState({path:\"\"})\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.dbx = new Dropbox({ accessToken: localStorage.getItem(\"token\") });\r\n    this.dbx.filesListFolder({path:\"\"})\r\n    .then(response =>{\r\n      this.setState({folders: response.entries.filter(object => object[\".tag\"] ===\"folder\" )})\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps,prevState){\r\n    if(prevState.path !== this.state.path){\r\n    this.dbx.filesListFolder({path: this.state.path})\r\n    .then(response =>{\r\n      let pathArray = []\r\n      let pathSplit = this.state.path.split('/').filter(path => path !== \"\").reduce((acc, current) =>{\r\n        pathArray.push(acc+`/${current}`)\r\n        return acc+`/${current}`} ,\"\")\r\n      this.setState({folders: response.entries.filter(object => object[\".tag\"] ===\"folder\"),routing: pathArray})\r\n    })\r\n  }\r\n  }\r\n\r\n  render(){\r\n  const{folders,path,routing} = this.state\r\n  console.log(path)\r\n  return ReactDom.createPortal(\r\n\r\n  <div className=\"CopyWindow\">\r\n  <div>\r\n  which folder do you want to copy it too?\r\n  </div>\r\n  <div className=\"routeDiv\">\r\n  <span className=\"routing\" onClick={this.onStartClick}>start></span>\r\n  {routing.map(route =>(\r\n    <RouterForCopyWindow route={route} onClickRouting={this.onClickRouting}/>\r\n  ))}\r\n  </div>\r\n  <ul className=\"selectFolder\">\r\n  {folders.map(folder => (\r\n    <CopyFolderList folder={folder} clickAnotherFolder={this.clickAnotherFolder} copy={this.props.copy}/>\r\n  ))}\r\n  </ul>\r\n  <div>\r\n    <button onClick={this.copyIntoSelectedFolder}>Copy into selected folder</button>\r\n    <button onClick={this.goBack}>Go Back</button>\r\n    <button onClick={this.props.closeCopyWindow}>Cancel</button>\r\n  </div>\r\n\r\n  </div>\r\n  , document.querySelector('#CopyWindow')\r\n\r\n)\r\n}\r\n}\r\n\r\nexport default CopyWindow"]},"metadata":{},"sourceType":"module"}